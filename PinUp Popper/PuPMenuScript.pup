// JAVASCRIPT	
// PinUP Popper Menu Script: MAIN SCRIPT and Fallback Config Settings v1.4.0


// WARNING! WARNING! WARNING! WARNING! WARNING! WARNING! WARNING! WARNING! WARNING! WARNING!

// WARNING! WARNING! WARNING! WARNING! WARNING! WARNING! WARNING! WARNING! WARNING! WARNING!

// WARNING! WARNING! WARNING! WARNING! WARNING! WARNING! WARNING! WARNING! WARNING! WARNING!



// The PuPMenuScript.pup file is NOT to be modified by USERS!!! 


// ALL USER settings are made in the following files:

// PUPMenuScriptSysOptions.txt for SYSTEM OPTIONS

// PuPMenuScriptSysLanguage.txt for SYSTEM TEXT and LANGUAGE

// PUPMenuScriptThemeOptions.txt for THEME and TEXT ZONE options



// WARNING! WARNING! WARNING! WARNING! WARNING! WARNING! WARNING! WARNING! WARNING! WARNING!

// WARNING! WARNING! WARNING! WARNING! WARNING! WARNING! WARNING! WARNING! WARNING! WARNING!

// WARNING! WARNING! WARNING! WARNING! WARNING! WARNING! WARNING! WARNING! WARNING! WARNING!


//////////////////////////////////////////////////////////////////

// DEFAULT POPPER FALLBACK Config settings for Theme, Text, System

// THEME: Tar-BAR (Tarcisio Bar)
// LAYOUT OPTION: DEFAULT
// THEME CONFIG: TerryRed
// VERSION: 1.0

// MENU TYPE: BAR
// LAYOUT: BAR on Playfield
// ORIENTATION: Landscape

// BAR Image by: Tarcisio Caleiro

//////////////////////////////////////////////////////////////////


// NOTE: This is using JAVASCRIPT

// Everything is case sensitive!
// All command lines end with ;		
// Lines with comments start with a minimum of //
// Some characters can't be used in Custom Text!


///////////// POPPER SYSTEM OPTIONS //////////////////////////////


  useDOF = false ;     		// set to true if using DOF output with Popper. false = disabled
  useDMD = false ;     		// set to true if using hardware dmddevice.DLL, for real DMDs. false = disabled
  useWEB = false ;     		// set to true if using WebServer for Remote control of Popper. false = disabled
  useDOFLinx = true;            // Set to true if using DOFLinx for menu actions and to show marquees for MAME via a Pixelcade device
  
  NoBracketText = 0 ;      	// set to 1 to NOT display any text within brackets for the Game's "Screen Name" 
                        	// set to 0 to display the entire Game "Screen Name"

  GameVersionInfo = 0 ;    	// set to 1 to display Game Version Information (in brackets) at the end of the Game's "Screen Name". 0 = Off

  ShowGameDetails = 1 ; 	// set to 1 to show full "Game Details" when the "Game Info" Wheel is highlighted. 0 = Off

  ShowAllText = 1;      	// set to 1 to allow all text to be displayed. set to 0 for NO text to be displayed.


///////////// POPPER TEXT ZONES //////////////////////////////////


// DATABASE CONTENT // =======================================

// Choose what Popper DATABASE CONTENT is displayed in each Text Zone.

// GAME Text Zones: CONTENT

// These will display when a Game Wheel is Highlighted.

	dbContent1G = [""] ;
	dbContent2G = [""] ;
	dbContent3G = ["Game"] ;
	dbContent4G = ["Count"] ;
	dbContent5G = [""] ;
	dbContent6G = [""] ;
	dbContent7G = ["Playlist_Current"] ;
	dbContent8G = ["Emulator"] ;

// Below are your Content options. These are only used for Game Text Zones!
// Copy your Content options to the dbContent_xG variables above.
// It MUST be exact (case sensitive), and placed within [""]. Example ["GameYear"]
// If you are NOT using any Database Content in a Text Zone, it MUST have [""]

	//	Game
	//	Manufact
	//	GameYear
	//	Count
	//	Emulator
	//	GAMEVER
	//	NumPlayers
	//	GameType
	//	Author
	//	GameTheme
	//	GameRating
	//	IPDBNum
	//	Category
	//	TAGS
	//	GameName
	//	GameFileName
	//	ROM
	//	Playlist_Highlighted
	//	Playlist_Current
	//	Time
	//	Custom_Text
	

// FUNCTION Text Zones: CONTENT

// These will display while in a Game Menu or a System Menu.

	dbContent1F = [""] ;
	dbContent2F = [""] ;
	dbContent3F = ["Function"] ;
	dbContent4F = ["Author"] ;
	dbContent5F = ["GAMEVER"] ;
	dbContent6F = ["GameType"] ;
	dbContent7F = [""] ;
	dbContent8F = [""] ;

// Below are your Content options. These are only used for Function Text Zones!
// Copy your Content options to the dbContent_xF variables above.
// It MUST be exact (case sensitive) and placed within [""]. Example ["GameYear"]
// If you are NOT using any Database Content in a Text Zone, it MUST have [""]

	//	Function
	//	Manufact
	//	GameYear
	//	Count
	//	Emulator
	//	GAMEVER
	//	NumPlayers
	//	GameType
	//	Author
	//	GameTheme
	//	GameRating
	//	IPDBNum
	//	Category
	//	TAGS
	//	GameName
	//	GameFileName
	//	ROM
	//	Playlist_Highlighted
	//	Playlist_Current
	//	Time
	//	Custom_Text
	

// PLAYLIST Text Zones: CONTENT

// These will display while a Playlist Wheel is highlighted.

	dbContent1P = [""] ;
	dbContent2P = [""] ;
	dbContent3P = ["Playlist_Highlighted"] ;
	dbContent4P = [""] ;
	dbContent5P = [""] ;
	dbContent6P = [""] ;
	dbContent7P = [""] ;
	dbContent8P = [""] ;

// Below are your Content options. These are only used for Playlist Text Zones!
// Copy your Content options to the dbContent_xP variables above.
// It MUST be exact (case sensitive) and placed within [""]. Example ["Time"]
// If you are NOT using any Database Content in a Text Zone, it MUST have [""]

	//	Playlist_Highlighted
	//	Playlist_Current
	//	Time
	//	Custom_Text


// HOME SCREEN Text Zones: CONTENT

// These will display while in on the Home Screen with a Playlist Wheel highlighted.

	dbContent1H = [""] ;
	dbContent2H = [""] ;
	dbContent3H = ["Playlist_Highlighted"] ;
	dbContent4H = ["Custom_Text"] ;
	dbContent5H = [""] ;
	dbContent6H = [""] ;
	dbContent7H = [""] ;
	dbContent8H = [""] ;

// Below are your Content options. These are only used for Home Screen Text Zones!
// Copy your Content options to the dbContent_xH variables above.
// It MUST be exact (case sensitive) and placed within [""]. Example ["GameYear"]
// If you are NOT using any Database Content in a Text Zone, it MUST have [""]

	//	Playlist_Highlighted
	//	Playlist_Current
	//	Time
	//	Custom_Text


// CUSTOM TEXT // =======================================

// Choose what Custom Text you want to display in each Text Zone (instead of Database Content)

// Custom Text MUST be in quotes. Example "WELCOME TO PINUP POPPER!"
// The DATABASE CONTENT for the Text Zone MUST be set to ["Custom_Text"]
// For NO Custom Text, you MUST use empty quotes. Example ""

// HOME SCREEN Text Zones: CUSTOM TEXT

// These will display while in on the Home Screen with a Playlist Wheel highlighted.

	 text_1H = "" ;
	 text_2H = "" ;
	 text_3H = "" ;
	 text_4H = "WELCOME TO PINUP POPPER 1.4" ;
	 text_5H = "" ;
	 text_6H = "" ;
	 text_7H = "" ;
	 text_8H = "" ;

// GAME Text Zones: CUSTOM TEXT

// These will display when a Game Wheel is Highlighted.

	 text_1G = "" ;
	 text_2G = "" ;
	 text_3G = "" ;
	 text_4G = "" ;
	 text_5G = "" ;
	 text_6G = "" ;
	 text_7G = "" ;
	 text_8G = "" ;

// FUNCTION Text Zones: CUSTOM TEXT

// These will display while in a Game Menu or a System Menu.

	 text_1F = "" ;
	 text_2F = "" ;
	 text_3F = "" ;
	 text_4F = "" ;
	 text_5F = "" ;
	 text_6F = "" ;
	 text_7F = "" ;
	 text_8F = "" ;

// PLAYLIST Text Zones: CUSTOM TEXT

// These will display while a Playlist Wheel is highlighted.

	 text_1P = "" ;
	 text_2P = "" ;
	 text_3P = "" ;
	 text_4P = "" ;
	 text_5P = "" ;
	 text_6P = "" ;
	 text_7P = "" ;
	 text_8P = "" ;

// PREFIXES // =======================================

  // Examples...

  // AUTHORS: G5K, Sliderpoint
  // VERSION: 1.2
  // TYPE: EM
  // TAGS: SSF, PUP-PACK
  // WITH 69 GAMES
  // PLAYERS: 4

  // could be changed to...

  // AUTH: G5K, Sliderpoint
  // VER: 1.2
  // MACHINE TYPE: EM
  // FEATURES: SSF, PUP-PACK
  // FEATURING 69 TABLES
  // PL: 4

  // Prefix Text MUST be in quotes. Example "PLAYERS: "

  // For NO Prefix Text, you MUST use empty quotes. Example ""

  // MISC PREFIXES

	 text_count_1 =  "WITH " ;    	// the first word in "With" xxxx Games
	 text_count_2 =  " GAMES" ;		// the second word in With xxxx "Games"

  // GAME TEXT Zone PREFIXES (When a Game Wheel is Highlighted)

	 prefix1G = "" ;
	 prefix2G = "" ;
	 prefix3G = "" ;
	 prefix4G = "" ;
	 prefix5G = "" ;
	 prefix6G = "" ;
	 prefix7G = "" ;
	 prefix8G = "" ;

  // FUNCTION Text Zone PREFIXES (When in a Game or System Menu)

	 prefix1F = "" ;
	 prefix2F = "" ;
	 prefix3F = "" ;
	 prefix4F = "AUTHORS: " ;
	 prefix5F = "VERSION: " ;
	 prefix6F = "TYPE: " ;
	 prefix7F = "" ;
	 prefix8F = "" ;

  // HOME SCREEN Text Zone PREFIXES (While on Home Screen and Playlist Wheel is highlighted)

	 prefix1H = "" ;
	 prefix2H = "" ;
	 prefix3H = "" ;
	 prefix4H = "" ;
	 prefix5H = "" ;
	 prefix6H = "" ;
	 prefix7H = "" ;
	 prefix8H = "" ;

  // PLAYLIST Text Zones: PREFIXES (Highlighting a Playlist)

	 prefix1P = "" ;
	 prefix2P = "" ;
	 prefix3P = "" ;
	 prefix4P = "" ;
	 prefix5P = "" ;
	 prefix6P = "" ;
	 prefix7P = "" ;
	 prefix8P = "" ;


// TEXT ZONES // =======================================

  // Enable or Disable Text Zones. Enable = 1, Disable = 0

  // GAME TEXT ZONES: displays text when a Game wheel is highlighted 

  pShow_Text_Zone1G = 1 ;	// 
  pShow_Text_Zone2G = 1 ;	// 
  pShow_Text_Zone3G = 1 ;	// (Game Display - Screen Name)
  pShow_Text_Zone4G = 1 ;	// (Count of Games)
  pShow_Text_Zone5G = 1 ;	
  pShow_Text_Zone6G = 1 ;	
  pShow_Text_Zone7G = 1 ;	// (Current Playlist)
  pShow_Text_Zone8G = 1 ;	// (Emulator)

  // PLAYLIST TEXT ZONES: displays text when a Playlist wheel is highlighted 

  pShow_Text_Zone1P = 1 ;	// 
  pShow_Text_Zone2P = 1 ;	// 
  pShow_Text_Zone3P = 1 ;	
  pShow_Text_Zone4P = 1 ;	
  pShow_Text_Zone5P = 1 ;	
  pShow_Text_Zone6P = 1 ;	
  pShow_Text_Zone7P = 1 ;	
  pShow_Text_Zone8P = 1 ;	
  
  // FUNCTION TEXT ZONES: (when in a Game or System Menu)

  pShow_Text_Zone1F = 1 ;	
  pShow_Text_Zone2F = 1 ;	
  pShow_Text_Zone3F = 1 ;	// (Function)(Start Game, etc)
  pShow_Text_Zone4F = 1 ;	
  pShow_Text_Zone5F = 1 ;	
  pShow_Text_Zone6F = 1 ;	
  pShow_Text_Zone7F = 1 ;	
  pShow_Text_Zone8F = 1 ;	
  
  // HOME SCREEN TEXT ZONES: displays custom text when on the HOME Screen and a Playlist Wheel is highlighted

  pShow_Text_Zone1H = 1 ;	// 
  pShow_Text_Zone2H = 1 ;	// 
  pShow_Text_Zone3H = 1 ;	
  pShow_Text_Zone4H = 1 ;	
  pShow_Text_Zone5H = 1 ;	
  pShow_Text_Zone6H = 1 ;	
  pShow_Text_Zone7H = 1 ;	
  pShow_Text_Zone8H = 1 ;	


// FONT COLOURS // =======================================

  // Set the colour for each Zone's fonts. 
  
  // It can be any value between 0 to 16777215. (integer value of windows color)
  
  // GAME TEXT Zones: FONT COLOURS

  Colour_Zone1G = 16438789 ;	// 
  Colour_Zone2G = 16438789 ;	// 
  Colour_Zone3G = 16777215 ;	// (Game Display)
  Colour_Zone4G = 16438789 ;	// (Count of Games)
  Colour_Zone5G = 16438789 ;	
  Colour_Zone6G = 16438789 ;	 
  Colour_Zone7G = 16438789 ;	// (Current Playlist)
  Colour_Zone8G = 16438789 ;	// (Emulator)

  // PLAYLIST Text Zones: FONT COLOURS

  Colour_Zone1P = 16777215 ;	
  Colour_Zone2P = 16438789 ;	
  Colour_Zone3P = 16777215 ;	
  Colour_Zone4P = 16438789 ;	
  Colour_Zone5P = 16438789 ;	
  Colour_Zone6P = 16438789 ;	
  Colour_Zone7P = 16438789 ;	
  Colour_Zone8P = 16438789 ;	

  // FUNCTION Text Zones: FONT COLOURS (when in a Game or System Menu)

  Colour_Zone1F = 16777215 ;	
  Colour_Zone2F = 16438789 ;	
  Colour_Zone3F = 16777215 ;	
  Colour_Zone4F = 16438789 ;	
  Colour_Zone5F = 16438789 ;	
  Colour_Zone6F = 16438789 ;	
  Colour_Zone7F = 16438789 ;	
  Colour_Zone8F = 16438789 ;	
  
  // HOME SCREEN Text Zones: FONT COLOURS

  Colour_Zone1H = 16777215 ;	
  Colour_Zone2H = 16438789 ;	
  Colour_Zone3H = 16777215 ;	
  Colour_Zone4H = 65535 ;	
  Colour_Zone5H = 16438789 ;	
  Colour_Zone6H = 16438789 ;	
  Colour_Zone7H = 16438789 ;	
  Colour_Zone8H = 16438789 ;	
  
  //  PRESET COLOUR VALUES FOR TEXT

  //  Default = 16438789
  //  Red = 255
  //  Green = 65280
  //  Blue = 16711680
  //  Cyan = 16776960
  //  Magenta = 16711935
  //  Yellow = 65535
  //  Orange = 33023
  //  Purple = 16711808
  //  White = 16777215
  //  Black = 0


// MAX CHARACTERS // ======================================= 

  // maximum characters displayed for each text zone

  // GAME TEXT Zones: MAX CHARACTERS

  FontMaxChar_Zone1G = 18 ;		// 
  FontMaxChar_Zone2G = 5 ;		// 
  FontMaxChar_Zone3G = 48 ;		// (Game Display)
  FontMaxChar_Zone4G = 15 ;		// (Count of Games)
  FontMaxChar_Zone5G = 12 ;		
  FontMaxChar_Zone6G = 12 ;		
  FontMaxChar_Zone7G = 24 ;		// (Current Playlist)
  FontMaxChar_Zone8G = 24 ;		// (Emulator)

  // PLAYLIST Text Zones: MAX CHARACTERS

  FontMaxChar_Zone1P = 18 ;		
  FontMaxChar_Zone2P = 5 ;		
  FontMaxChar_Zone3P = 48 ;		
  FontMaxChar_Zone4P = 60 ;		
  FontMaxChar_Zone5P = 12 ;		
  FontMaxChar_Zone6P = 12 ;		
  FontMaxChar_Zone7P = 22 ;		
  FontMaxChar_Zone8P = 22 ;		

  // FUNCTION Text Zones: MAX CHARACTERS (when in a Game or System Menu)

  FontMaxChar_Zone1F = 18 ;		
  FontMaxChar_Zone2F = 5 ;		
  FontMaxChar_Zone3F = 48 ;		
  FontMaxChar_Zone4F = 60 ;		
  FontMaxChar_Zone5F = 22 ;		
  FontMaxChar_Zone6F = 22 ;		
  FontMaxChar_Zone7F = 40 ;		
  FontMaxChar_Zone8F = 22 ;		
  
  // HOME SCREEN Text Zones: MAX CHARACTERS

  FontMaxChar_Zone1H = 18 ;		
  FontMaxChar_Zone2H = 5 ;		
  FontMaxChar_Zone3H = 48 ;		
  FontMaxChar_Zone4H = 60 ;		
  FontMaxChar_Zone5H = 12 ;		
  FontMaxChar_Zone6H = 12 ;		
  FontMaxChar_Zone7H = 22 ;		
  FontMaxChar_Zone8H = 22 ;		


// FONTS // =======================================

  // What font will be used for each text zone.

  // It's best to have the font files installed in your Windows system fonts. (Popper loads faster)
  // Otherwise, the font files must be in the "PUPVideos\pinupmenu\FONTS" folder!
  // If you are using custom TTF fonts then double check the name of font names.

  // GAME TEXT Zones: FONTS

  Font_Zone1G = "Digital-7 Italic" ;		// 
  Font_Zone2G = "Digital-7 Italic" ;		// 
  Font_Zone3G = "Digital-7 Italic" ;		// (Game Display)
  Font_Zone4G = "Digital-7 Italic" ;		// (Count of Games)
  Font_Zone5G = "Digital-7 Italic" ;		
  Font_Zone6G = "Digital-7 Italic" ;		
  Font_Zone7G = "Digital-7 Italic" ;		// (Playlist)
  Font_Zone8G = "Digital-7 Italic" ;		// (Emulator)

  // PLAYLIST Text Zones: FONTS

  Font_Zone1P = "Digital-7 Italic" ;		
  Font_Zone2P = "Digital-7 Italic" ;		
  Font_Zone3P = "Digital-7 Italic" ;		
  Font_Zone4P = "Digital-7 Italic" ;		
  Font_Zone5P = "Digital-7 Italic" ;		
  Font_Zone6P = "Digital-7 Italic" ;		
  Font_Zone7P = "Digital-7 Italic" ;		
  Font_Zone8P = "Digital-7 Italic" ;		

  // FUNCTION Text Zones: FONTS (when in a Game or System Menu)

  Font_Zone1F = "Digital-7 Italic" ;		
  Font_Zone2F = "Digital-7 Italic" ;		
  Font_Zone3F = "Digital-7 Italic" ;		
  Font_Zone4F = "Digital-7 Italic" ;		
  Font_Zone5F = "Digital-7 Italic" ;		
  Font_Zone6F = "Digital-7 Italic" ;		
  Font_Zone7F = "Digital-7 Italic" ;		
  Font_Zone8F = "Digital-7 Italic" ;		
  
  // HOME SCREEN Text Zones: FONTS

  Font_Zone1H = "Digital-7 Italic" ;		
  Font_Zone2H = "Digital-7 Italic" ;		
  Font_Zone3H = "Digital-7 Italic" ;		
  Font_Zone4H = "Digital-7 Italic" ;		
  Font_Zone5H = "Digital-7 Italic" ;		
  Font_Zone6H = "Digital-7 Italic" ;		
  Font_Zone7H = "Digital-7 Italic" ;		
  Font_Zone8H = "Digital-7 Italic" ;		


// FONT SIZE // =======================================

  // set font size for each text zone. Height as a percent of display height. 
  
  // 20=20% of screen height. No decimals.

  // GAME TEXT Zones: FONT SIZE

  FontSize_Zone1G = 3 ;		// 
  FontSize_Zone2G = 3 ;		// 
  FontSize_Zone3G = 3 ;		// (Game Display)
  FontSize_Zone4G = 2 ;		// (Count of Games)
  FontSize_Zone5G = 3 ;		
  FontSize_Zone6G = 3 ;		 
  FontSize_Zone7G = 3 ;		// (Playlist)
  FontSize_Zone8G = 3 ;		// (Emulator)
  
  // PLAYLIST Text Zones: FONT SIZE
 
  FontSize_Zone1P = 3 ;		
  FontSize_Zone2P = 3 ;		
  FontSize_Zone3P = 3 ;		
  FontSize_Zone4P = 3 ;		
  FontSize_Zone5P = 3 ;		
  FontSize_Zone6P = 3 ;		
  FontSize_Zone7P = 3 ;		
  FontSize_Zone8P = 3 ;		

  // FUNCTION Text Zones: FONT SIZE (when in a Game or System Menu)

  FontSize_Zone1F = 3 ;		
  FontSize_Zone2F = 3 ;		
  FontSize_Zone3F = 3 ;		
  FontSize_Zone4F = 3 ;		
  FontSize_Zone5F = 3 ;		
  FontSize_Zone6F = 3 ;		
  FontSize_Zone7F = 3 ;		
  FontSize_Zone8F = 3 ;		
  
  // HOME SCREEN Text Zones: FONT SIZE

  FontSize_Zone1H = 3 ;		
  FontSize_Zone2H = 3 ;		
  FontSize_Zone3H = 3 ;		
  FontSize_Zone4H = 3 ;		
  FontSize_Zone5H = 3 ;		
  FontSize_Zone6H = 3 ;		
  FontSize_Zone7H = 3 ;		
  FontSize_Zone8H = 3 ;		


// FONT ROTATION // =======================================

  // set the rotation for all fonts. Degrees in tenths. (900=90 degrees) Landscape = 900. Portrait = 0

  FontRotation_ZonesALL = 900 ;


// X and Y ALIGNMENT // ======================================= 

  // X and Y Alignment of each Text Zone

  // xAlign, 0 = horizontal left align, 1 = center horizontal, 2 = right horizontal
  // yAlign, 0 = top, 1 = center, 2=bottom vertical alignment

  // GAME Text Zones: X and Y ALIGNMENT

  Zone1G_xAlign = 0 ;
  Zone1G_yAlign = 1 ;
  Zone2G_xAlign = 0 ;
  Zone2G_yAlign = 1 ;  
  Zone3G_xAlign = 0 ;			
  Zone3G_yAlign = 1 ;
  Zone4G_xAlign = 0 ;		
  Zone4G_yAlign = 1 ;
  Zone5G_xAlign = 0 ;			
  Zone5G_yAlign = 2 ;		
  Zone6G_xAlign = 0 ;			
  Zone6G_yAlign = 0 ;		
  Zone7G_xAlign = 0 ;		
  Zone7G_yAlign = 2 ;			
  Zone8G_xAlign = 0 ;		
  Zone8G_yAlign = 0 ;			

  // PLAYLIST Text Zones: X and Y ALIGNMENT

  Zone1P_xAlign = 0 ;
  Zone1P_yAlign = 1 ;
  Zone2P_xAlign = 0 ;
  Zone2P_yAlign = 1 ;  
  Zone3P_xAlign = 0 ;			
  Zone3P_yAlign = 1 ;
  Zone4P_xAlign = 0 ;		
  Zone4P_yAlign = 1 ;
  Zone5P_xAlign = 0 ;			
  Zone5P_yAlign = 2 ;		
  Zone6P_xAlign = 0 ;			
  Zone6P_yAlign = 0 ; 		
  Zone7P_xAlign = 0 ;		
  Zone7P_yAlign = 2 ;			
  Zone8P_xAlign = 0 ;		
  Zone8P_yAlign = 0 ;				

  // FUNCTION Text Zones: X and Y ALIGNMENT

  Zone1F_xAlign = 0 ;
  Zone1F_yAlign = 1 ;
  Zone2F_xAlign = 0 ;
  Zone2F_yAlign = 1 ;  
  Zone3F_xAlign = 0 ;			
  Zone3F_yAlign = 1 ;
  Zone4F_xAlign = 0 ;		
  Zone4F_yAlign = 1 ;
  Zone5F_xAlign = 0 ;			
  Zone5F_yAlign = 2 ;		
  Zone6F_xAlign = 0 ;			
  Zone6F_yAlign = 0 ;		
  Zone7F_xAlign = 0 ; 		
  Zone7F_yAlign = 2 ; 			
  Zone8F_xAlign = 0 ;		
  Zone8F_yAlign = 0 ;			

  // HOME SCREEN Text Zones: X and Y ALIGNMENT

  Zone1H_xAlign = 0 ;
  Zone1H_yAlign = 1 ;
  Zone2H_xAlign = 0 ;
  Zone2H_yAlign = 1 ;  
  Zone3H_xAlign = 0 ;			
  Zone3H_yAlign = 1 ;
  Zone4H_xAlign = 0 ;		
  Zone4H_yAlign = 1 ;
  Zone5H_xAlign = 0 ;			
  Zone5H_yAlign = 2 ;		
  Zone6H_xAlign = 0 ;			
  Zone6H_yAlign = 0 ;		
  Zone7H_xAlign = 0 ;		
  Zone7H_yAlign = 2 ;			
  Zone8H_xAlign = 0 ;
  Zone8H_yAlign = 0 ;			
  
  
// X and Y POSITIONS // =======================================

  // Position of each Text Zone

  // values are a % of horizontal width, or % of vertical height. (20=20%)

  // GAME TEXT Zones: X and Y POSITIONS

  Zone1G_xpoz = 89.25 ;
  Zone1G_ypoz = 0 ;
  Zone2G_xpoz = 91.1 ;
  Zone2G_ypoz = 0 ;  
  Zone3G_xpoz = 96 ;			
  Zone3G_ypoz = 0 ;
  Zone4G_xpoz = 98.5 ;		
  Zone4G_ypoz = 0 ;
  Zone5G_xpoz = 96 ;			
  Zone5G_ypoz = 84.5 ;		
  Zone6G_xpoz = 96 ;			
  Zone6G_ypoz = 15.5 ;		
  Zone7G_xpoz = 98.2 ;		
  Zone7G_ypoz = 92 ;			
  Zone8G_xpoz = 98.2 ;		
  Zone8G_ypoz = 8 ;			

  // PLAYLIST Text Zones: X and Y POSITIONS

  Zone1P_xpoz = 89.25 ;
  Zone1P_ypoz = 0 ;
  Zone2P_xpoz = 91.1 ;			
  Zone2P_ypoz = 0 ;
  Zone3P_xpoz = 96 ;				
  Zone3P_ypoz = 0 ;
  Zone4P_xpoz = 98.2 ;		
  Zone4P_ypoz = 0 ;
  Zone5P_xpoz = 96 ;				
  Zone5P_ypoz = 84.5 ;			
  Zone6P_xpoz = 96 ;				
  Zone6P_ypoz = 15.5 ;			
  Zone7P_xpoz = 98.2 ;			
  Zone7P_ypoz = 92 ;				
  Zone8P_xpoz = 98.2 ;			
  Zone8P_ypoz = 8 ;				

  // FUNCTION Text Zones: X and Y POSITIONS

  Zone1F_xpoz = 89.25 ;
  Zone1F_ypoz = 0 ;  
  Zone2F_xpoz = 91.1 ;
  Zone2F_ypoz = 0 ;    
  Zone3F_xpoz = 96 ;			
  Zone3F_ypoz = 0 ;  
  Zone4F_xpoz = 98.2 ;		
  Zone4F_ypoz = 0 ; 
  Zone5F_xpoz = 96 ;				
  Zone5F_ypoz = 84.5 ;	
  Zone6F_xpoz = 96 ;			
  Zone6F_ypoz = 15.5 ;			
  Zone7F_xpoz = 98.2 ;		
  Zone7F_ypoz = 92 ;			
  Zone8F_xpoz = 98.2 ;		
  Zone8F_ypoz = 8 ;			

  // HOME SCREEN Text Zones: X and Y POSITIONS

  Zone1H_xpoz = 89.25 ;
  Zone1H_ypoz = 0 ;
  Zone2H_xpoz = 91.1 ;
  Zone2H_ypoz = 0 ;  
  Zone3H_xpoz = 96 ;			
  Zone3H_ypoz = 0 ;
  Zone4H_xpoz = 98.2 ;		
  Zone4H_ypoz = 0 ;
  Zone5H_xpoz = 96 ;			
  Zone5H_ypoz = 84.5 ;		
  Zone6H_xpoz = 96 ;			
  Zone6H_ypoz = 15.5 ;		
  Zone7H_xpoz = 98.2 ;		
  Zone7H_ypoz = 92 ;			
  Zone8H_xpoz = 98.2 ;		
  Zone8H_ypoz = 8 ;			



///////////// END of POPPER TEXT ZONES: USER OPTIONS /////////////////////////



///////////// GAME DETAILS: TEXT //////////////////

// This will list the game's Database Details when "Game Details" Wheel is highlighted

  // FONT SIZE

  FontSize_GameDetails = 4 ;
	
  // FONT	

  Font_GameDetails = "Digital-7 Italic" ;	

  // PREFIXES

  prefix_GameDetails1 = "GAME NAME:  " ;
  prefix_GameDetails2 = "MANUFACTURER:  " ;
  prefix_GameDetails3 = "YEAR:  " ;
  prefix_GameDetails4 = "PLAYLIST:  " ;
  prefix_GameDetails5 = "EMULATOR:  " ;
  prefix_GameDetails6 = "VERSION:  " ;
  prefix_GameDetails7 = "PLAYERS:  " ;
  prefix_GameDetails8 = "MACHINE TYPE:  " ;
  prefix_GameDetails9 = "AUTHORS:  " ;
  prefix_GameDetails10 = "THEME:  " ;
  prefix_GameDetails11 = "RATING:  " ;
  prefix_GameDetails12 = "IPDB:  " ;
  prefix_GameDetails13 = "CATEGORY:  " ;
  prefix_GameDetails14 = "FEATURES:  " ;
  prefix_GameDetails15 = "FILENAME:  " ;
  prefix_GameDetails16 = "ROM:  " ;
  prefix_GameDetails17 = "CUSTOM 1:  " ;
  prefix_GameDetails18 = "CUSTOM 2:  " ;
  prefix_GameDetails19 = "CUSTOM 3:  " ;
  prefix_GameDetails20 = "ALT RUN:  " ;

  // FONT COLOUR

  Colour_GameDetails = 65535 ;	

  // MAX CHARACTERS

  MaxChar_GameDetails1 = 58 ;		
  MaxChar_GameDetails2 = 58 ;		
  MaxChar_GameDetails3 = 58 ;		
  MaxChar_GameDetails4 = 58 ;		
  MaxChar_GameDetails5 = 58 ;		
  MaxChar_GameDetails6 = 58 ;		
  MaxChar_GameDetails7 = 58 ;		
  MaxChar_GameDetails8 = 58 ;		
  MaxChar_GameDetails9 = 58 ;		
  MaxChar_GameDetails10 = 58 ;		
  MaxChar_GameDetails11 = 58 ;		
  MaxChar_GameDetails12 = 58 ;		
  MaxChar_GameDetails13 = 58 ;		
  MaxChar_GameDetails14 = 58 ;		
  MaxChar_GameDetails15 = 58 ;		
  MaxChar_GameDetails16 = 58 ;
  MaxChar_GameDetails17 = 58 ;		
  MaxChar_GameDetails18 = 58 ;		
  MaxChar_GameDetails19 = 58 ;		
  MaxChar_GameDetails20 = 58 ;		
  
  // ROTATION

  FontRotation_GameDetails = 900 ;

  // X and Y ALIGNMENT

  GameDetails_xAlign = 0 ;
  GameDetails_yAlign = 2 ;


  // X and Y POSITIONS

  GameDetails1_xpoz = 8 ;
  GameDetails2_xpoz = 11 ;  
  GameDetails3_xpoz = 14 ;
  GameDetails4_xpoz = 17 ;
  GameDetails5_xpoz = 20 ;		
  GameDetails6_xpoz = 23 ;		
  GameDetails7_xpoz = 26 ;			
  GameDetails8_xpoz = 29 ;		
  GameDetails9_xpoz = 32 ;
  GameDetails10_xpoz = 35 ;  
  GameDetails11_xpoz = 38 ;
  GameDetails12_xpoz = 41 ;
  GameDetails13_xpoz = 44 ;		
  GameDetails14_xpoz = 47 ;		
  GameDetails15_xpoz = 50 ;			
  GameDetails16_xpoz = 53 ;		
  GameDetails17_xpoz = 56 ;		
  GameDetails18_xpoz = 59 ;		
  GameDetails19_xpoz = 62 ;			
  GameDetails20_xpoz = 65 ;	

  GameDetails1_ypoz = 95 ;
  GameDetails2_ypoz = 95 ;  
  GameDetails3_ypoz = 95 ;
  GameDetails4_ypoz = 95 ;
  GameDetails5_ypoz = 95 ;		
  GameDetails6_ypoz = 95 ;		
  GameDetails7_ypoz = 95 ;			
  GameDetails8_ypoz = 95 ;		
  GameDetails9_ypoz = 95 ;
  GameDetails10_ypoz = 95 ;  
  GameDetails11_ypoz = 95 ;
  GameDetails12_ypoz = 95 ;
  GameDetails13_ypoz = 95 ;		
  GameDetails14_ypoz = 95 ;		
  GameDetails15_ypoz = 95 ;			
  GameDetails16_ypoz = 95 ;		
  GameDetails17_ypoz = 95 ;		
  GameDetails18_ypoz = 95 ;		
  GameDetails19_ypoz = 95 ;			
  GameDetails20_ypoz = 95 ;	


////////// END of GAME DETAILS //////////////





//// POPPER SYSTEM TEXT: USER OPTIONS // ================================

// Customize the Text that is displayed with each Popper System function.
// Note: SYSTEM TEXT does not override any other Text Zone settings!
// Both can be used at the same time, so be mindful of what you use on each feature!
// Some characters cannot be used.
// For NO text, you MUST at least have ""

MaxCharSystem_Zone3 = 52 ;  // Max Characters Displayed
MaxCharSystem_Zone4 = 60 ;  // Max Characters Displayed

// When "Record Display" is highlighted
RecordMenu_Zone3F = "" ;
RecordMenu_Zone4F = "RECORD A VIDEO TO USE FOR YOUR POPPER MEDIA" ;

// When in Record Menu
RecordOptions_Zone3F = "" ;
RecordOptions_Zone4F = "LAUNCH GAME IN RECORD MODE. PRESS XX TO RECORD / STOP" ;

// When Passcode is highlighted
Passcode_Zone3F = "" ;
Passcode_Zone4F = "ENTER YOUR PASS CODE TO ACCESS THIS PLAYLIST" ;

// When "System" is highlighted
SystemMenu_Zone3F = "" ;
SystemMenu_Zone4F = "RESTART, EXIT, SHUTDOWN" ;

// When "System Exit" is highlighted
SystemExit_Zone3F = "" ;
SystemExit_Zone4F = "SELECT TO EXIT PINUP POPPER" ;

// When "Confirm System Exit" is highlighted
ConfirmSystemExit_Zone3F = "" ;
ConfirmSystemExit_Zone4F = "ARE YOU SURE YOU WANT TO GO BACK TO WINDOWS?" ;

// When "Restart" is highlighted
SystemRestart_Zone3F = "" ;
SystemRestart_Zone4F = "SELECT TO RESTART YOUR PC" ;

// When "Turn Off PC" is highlighted
SystemTurnOFF_Zone3F = "" ;
SystemTurnOFF_Zone4F = "SELECT TO TURN OFF YOUR PC" ;

// When "Confirm Turn Off PC" is highlighted
ConfirmTurnOFF_Zone3F = "" ;
ConfirmTurnOFF_Zone4F = "ARE YOU SURE YOU WANT TO TURN OFF YOUR PC?" ;

// When "Home List" is highlighted
HomeList_Zone3F = "" ;
HomeList_Zone4F = "GO BACK TO YOUR HOME PLAYLIST" ;

// When "Game Details" is highlighted
GameDet_Zone3F = "" ;
GameDet_Zone4F = "SELECT TO DISPLAY FLYERS, THEN FLIPPERS TO CYCLE THEM" ;

// When "Add to Favorites" is highlighted
AddFav_Zone3F = "" ;
AddFav_Zone4F = "ADD TO YOUR FAVORITES FOR THIS PLAYLIST ONLY" ;

// When "Global Add to Favorites" is highlighted
GlobAddFav_Zone3F = "" ;
GlobAddFav_Zone4F = "ADD TO YOUR GLOBAL FAVORITES ON YOUR HOME PLAYLIST" ;

// When "Instructional Videos" is highlighted
Instructions_Zone3F = "" ;
Instructions_Zone4F = "SELECT TO PLAY THE FIRST ITEM, THEN FLIPPERS TO CYCLE THEM" ;

// When "MenuBack" is highlighted
MenuBack_Zone3F = "" ;
MenuBack_Zone4F = "" ;

// When "Favorites" is highlighted
Favorites_Zone3P = "" ;
Favorites_Zone4P = "YOUR FAVORITES ON THIS PLAYLIST" ;

// When "Most Played" is highlighted
MostPlayed_Zone3P = "" ;
MostPlayed_Zone4P = "GAMES THAT HAVE BEEN PLAYED THE MOST ON THIS PLAYLIST" ;

// When "Recently Played" is highlighted
RecentlyPlayed_Zone3P = "" ;
RecentlyPlayed_Zone4P = "THE RECENT GAMES YOU HAVE BEEN PLAYING" ;

// When "GoBack" is highlighted
GoBack_Zone3P = "" ;
GoBack_Zone4P = "" ;


////////// END OF ALL USER OPTIONS!!! ////////////////////////////////////////
// USERS DO NOT MAKE CHANGES PAST THIS POINT!!! //////////////////////////////


/////// THEME and LAYOUT SETTINGS - DO NOT MODIFY !!! /////////////////////////////////////
// These settings are required for this Theme and Layout. They are not to be modfified! ///

	if (ShowAllText==1) {(pGameInfo = 3);}        // change pGameInfo to the screen you want to display text Zones on.  
	else if (ShowAllText==0) {(pGameInfo = -1);}  // (0=topper, 1=DMD, 2=BG, 3=playfield) -1 means OFF!

	pGameDetails = 3 ;                            // screen that Game Details Text is Displayed On.
	SplashText_Font = "Digital-7 Italic";     // set the Splash Text font
	pSplashInfo = -1 ;                            // set this to 2 to show splash text on the Backglass screen. -1 means OFF!

	pfallback_function_Text = 3 ;                 // set the Fallback Default Text Zone to display Popper functions on


//##########       END OF USER OPTIONS and THEME Settings     ###########
//########## Users DO NOT make any changes past this point!!! ###########
//#######################################################################

//***** WARNING!!! WARNING!!! WARNING!!! WARNING!!! WARNING!!! WARNING!!! ******

//**** WARNING!!! DO NOT not modify anything below this line!!! WARNING!!! *****

//**** !!!!! All of the code below is using your settings from above !!!!! *****  

//******************************************************************************



//////////////// POPPER MAIN FUNCTIONS /////////////////////

////// Popper Screen Definitions ////////

var pTopper = 0;
var pDMD = 1;
var pBackglass = 2;
var pPlayfield = 3;
var pMusic = 4;
	
var PuPlayer = new ActiveXObject("PinUpPlayer.PinDisplay");
PuPlayer.InitPuPMenu(0);  //don't touch


/////////////////////////////////// Setup TEXT Labels and Positions //////////////////////////////////////////

  var jsDetails = null
  var hidetimeText = 0;  //don't modify

 ///// Setup Label Positions /////
 
	function Setuplabels(){  
	if (pGameInfo>-1) {

	PuPlayer.LabelInit(pGameInfo);
	PuPlayer.LabelInit(pGameDetails);
		
  // page1

  // PuPlayer.LabelNew(screen#,Labelname,fontName,size,colour,rotation,xAlign,yAlign,xpos,ypos,PageNum,visible);

  // <screen#>, pup display number
  // <Labelname>, your name of the label. keep it short no spaces (like 8 chars). When setting the label you will use this labelname to access the label.
  // <fontName> Windows font name, this must be exact match of OS front name. If you are using custom TTF fonts then double check the name of font names.
  // <size%>, Height as a percent of display height. 20=20% of screen height.
  // <colour>, integer value of windows color.
  // <rotation>, degrees in tenths   (900=90 degrees)
  // <xAlign>, 0 = horizontal left align, 1 = center horizontal, 2 = right horizontal
  // <yAlign>, 0 = top, 1 = center, 2=bottom vertical alignment
  // <xpos>, this should be 0, but if you want to  force  a position you can set this. it is a % of horizontal width. 20=20% of screen width.
  // <ypos> same as xpos.
  // <PageNum> IMPORTANT  this will assign this label to this  page  or group.
  // <visible> initial state of label. visible=1 show, 0 = off.
	

  // LABELNEW: Where you define the  properties of your Text Zone. No Decimals in numbers.
  
  // Game Text Zones: LabelNew

	PuPlayer.LabelNew(pGameInfo,"Text_Zone1G",Font_Zone1G,FontSize_Zone1G,Colour_Zone1G,FontRotation_ZonesALL,Zone1G_xAlign,Zone1G_yAlign,0,0,3,1);	// Zone 1G (Manufacturer)
	PuPlayer.LabelNew(pGameInfo,"Text_Zone2G",Font_Zone2G,FontSize_Zone2G,Colour_Zone2G,FontRotation_ZonesALL,Zone2G_xAlign,Zone2G_yAlign,0,0,3,1);	// Zone 2G (Year)
	PuPlayer.LabelNew(pGameInfo,"Text_Zone3G",Font_Zone3G,FontSize_Zone3G,Colour_Zone3G,FontRotation_ZonesALL,Zone3G_xAlign,Zone3G_yAlign,0,0,3,1);	// Zone 3G (Game Display - Screen Name)
	PuPlayer.LabelNew(pGameInfo,"Text_Zone4G",Font_Zone4G,FontSize_Zone4G,Colour_Zone4G,FontRotation_ZonesALL,Zone4G_xAlign,Zone4G_yAlign,0,0,3,1);	// Zone 4G (Count of Games)
	PuPlayer.LabelNew(pGameInfo,"Text_Zone5G",Font_Zone5G,FontSize_Zone5G,Colour_Zone5G,FontRotation_ZonesALL,Zone5G_xAlign,Zone5G_yAlign,0,0,3,1);	// Zone 5G
	PuPlayer.LabelNew(pGameInfo,"Text_Zone6G",Font_Zone6G,FontSize_Zone6G,Colour_Zone6G,FontRotation_ZonesALL,Zone6G_xAlign,Zone6G_yAlign,0,0,3,1);	// Zone 6G
	PuPlayer.LabelNew(pGameInfo,"Text_Zone7G",Font_Zone7G,FontSize_Zone7G,Colour_Zone7G,FontRotation_ZonesALL,Zone7G_xAlign,Zone7G_yAlign,0,0,3,1);	// Zone 7G (Current Playlist)
	PuPlayer.LabelNew(pGameInfo,"Text_Zone8G",Font_Zone8G,FontSize_Zone8G,Colour_Zone8G,FontRotation_ZonesALL,Zone8G_xAlign,Zone8G_yAlign,0,0,3,1);	// Zone 8G (Emulator)

  // Playlist Text Zones: LabelNew

	PuPlayer.LabelNew(pGameInfo,"Text_Zone1P",Font_Zone1P,FontSize_Zone1P,Colour_Zone1P,FontRotation_ZonesALL,Zone1P_xAlign,Zone1P_yAlign,0,0,3,1);	// Zone 1P
	PuPlayer.LabelNew(pGameInfo,"Text_Zone2P",Font_Zone2P,FontSize_Zone2P,Colour_Zone2P,FontRotation_ZonesALL,Zone2P_xAlign,Zone2P_yAlign,0,0,3,1);	// Zone 2P
	PuPlayer.LabelNew(pGameInfo,"Text_Zone3P",Font_Zone3P,FontSize_Zone3P,Colour_Zone3P,FontRotation_ZonesALL,Zone3P_xAlign,Zone3P_yAlign,0,0,3,1);	// Zone 3P
	PuPlayer.LabelNew(pGameInfo,"Text_Zone4P",Font_Zone4P,FontSize_Zone4P,Colour_Zone4P,FontRotation_ZonesALL,Zone4P_xAlign,Zone4P_yAlign,0,0,3,1);	// Zone 4P
	PuPlayer.LabelNew(pGameInfo,"Text_Zone5P",Font_Zone5P,FontSize_Zone5P,Colour_Zone5P,FontRotation_ZonesALL,Zone5P_xAlign,Zone5P_yAlign,0,0,3,1);	// Zone 5P
	PuPlayer.LabelNew(pGameInfo,"Text_Zone6P",Font_Zone6P,FontSize_Zone6P,Colour_Zone6P,FontRotation_ZonesALL,Zone6P_xAlign,Zone6P_yAlign,0,0,3,1);	// Zone 6P
	PuPlayer.LabelNew(pGameInfo,"Text_Zone7P",Font_Zone7P,FontSize_Zone7P,Colour_Zone7P,FontRotation_ZonesALL,Zone7P_xAlign,Zone7P_yAlign,0,0,3,1);	// Zone 7P
	PuPlayer.LabelNew(pGameInfo,"Text_Zone8P",Font_Zone8P,FontSize_Zone8P,Colour_Zone8P,FontRotation_ZonesALL,Zone8P_xAlign,Zone8P_yAlign,0,0,3,1);	// Zone 8P

  // Function Text Zones: LabelNew

	PuPlayer.LabelNew(pGameInfo,"Text_Zone1F",Font_Zone1F,FontSize_Zone1F,Colour_Zone1F,FontRotation_ZonesALL,Zone1F_xAlign,Zone1F_yAlign,0,0,3,1);	// Zone 1F
	PuPlayer.LabelNew(pGameInfo,"Text_Zone2F",Font_Zone2F,FontSize_Zone2F,Colour_Zone2F,FontRotation_ZonesALL,Zone2F_xAlign,Zone2F_yAlign,0,0,3,1);	// Zone 2F
	PuPlayer.LabelNew(pGameInfo,"Text_Zone3F",Font_Zone3F,FontSize_Zone3F,Colour_Zone3F,FontRotation_ZonesALL,Zone3F_xAlign,Zone3F_yAlign,0,0,3,1);	// Zone 3F
	PuPlayer.LabelNew(pGameInfo,"Text_Zone4F",Font_Zone4F,FontSize_Zone4F,Colour_Zone4F,FontRotation_ZonesALL,Zone4F_xAlign,Zone4F_yAlign,0,0,3,1);	// Zone 4F
	PuPlayer.LabelNew(pGameInfo,"Text_Zone5F",Font_Zone5F,FontSize_Zone5F,Colour_Zone5F,FontRotation_ZonesALL,Zone5F_xAlign,Zone5F_yAlign,0,0,3,1);	// Zone 5F
	PuPlayer.LabelNew(pGameInfo,"Text_Zone6F",Font_Zone6F,FontSize_Zone6F,Colour_Zone6F,FontRotation_ZonesALL,Zone6F_xAlign,Zone6F_yAlign,0,0,3,1);	// Zone 6F
	PuPlayer.LabelNew(pGameInfo,"Text_Zone7F",Font_Zone7F,FontSize_Zone7F,Colour_Zone7F,FontRotation_ZonesALL,Zone7F_xAlign,Zone7F_yAlign,0,0,3,1);	// Zone 7F
	PuPlayer.LabelNew(pGameInfo,"Text_Zone8F",Font_Zone8F,FontSize_Zone8F,Colour_Zone8F,FontRotation_ZonesALL,Zone8F_xAlign,Zone8F_yAlign,0,0,3,1);	// Zone 8F

  // Home Screen Text Zones: LabelNew

	PuPlayer.LabelNew(pGameInfo,"Text_Zone1H",Font_Zone1H,FontSize_Zone1H,Colour_Zone1H,FontRotation_ZonesALL,Zone1H_xAlign,Zone1H_yAlign,0,0,3,1);	// Zone 1H
	PuPlayer.LabelNew(pGameInfo,"Text_Zone2H",Font_Zone2H,FontSize_Zone2H,Colour_Zone2H,FontRotation_ZonesALL,Zone2H_xAlign,Zone2H_yAlign,0,0,3,1);	// Zone 2H
	PuPlayer.LabelNew(pGameInfo,"Text_Zone3H",Font_Zone3H,FontSize_Zone3H,Colour_Zone3H,FontRotation_ZonesALL,Zone3H_xAlign,Zone3H_yAlign,0,0,3,1);	// Zone 3H
	PuPlayer.LabelNew(pGameInfo,"Text_Zone4H",Font_Zone4H,FontSize_Zone4H,Colour_Zone4H,FontRotation_ZonesALL,Zone4H_xAlign,Zone4H_yAlign,0,0,3,1);	// Zone 4H
	PuPlayer.LabelNew(pGameInfo,"Text_Zone5H",Font_Zone5H,FontSize_Zone5H,Colour_Zone5H,FontRotation_ZonesALL,Zone5H_xAlign,Zone5H_yAlign,0,0,3,1);	// Zone 5H
	PuPlayer.LabelNew(pGameInfo,"Text_Zone6H",Font_Zone6H,FontSize_Zone6H,Colour_Zone6H,FontRotation_ZonesALL,Zone6H_xAlign,Zone6H_yAlign,0,0,3,1);	// Zone 6H
	PuPlayer.LabelNew(pGameInfo,"Text_Zone7H",Font_Zone7H,FontSize_Zone7H,Colour_Zone7H,FontRotation_ZonesALL,Zone7H_xAlign,Zone7H_yAlign,0,0,3,1);	// Zone 7H
	PuPlayer.LabelNew(pGameInfo,"Text_Zone8H",Font_Zone8H,FontSize_Zone8H,Colour_Zone8H,FontRotation_ZonesALL,Zone8H_xAlign,Zone8H_yAlign,0,0,3,1);	// Zone 8H

	if (ShowGameDetails==1) {  //If Game Details Text is enabled

  // Game Details Text: LabelNew

	PuPlayer.LabelNew(pGameDetails,"GameDetails1",Font_GameDetails,FontSize_GameDetails,Colour_GameDetails,FontRotation_GameDetails,GameDetails_xAlign,GameDetails_yAlign,0,0,3,1);
	PuPlayer.LabelNew(pGameDetails,"GameDetails2",Font_GameDetails,FontSize_GameDetails,Colour_GameDetails,FontRotation_GameDetails,GameDetails_xAlign,GameDetails_yAlign,0,0,3,1);
	PuPlayer.LabelNew(pGameDetails,"GameDetails3",Font_GameDetails,FontSize_GameDetails,Colour_GameDetails,FontRotation_GameDetails,GameDetails_xAlign,GameDetails_yAlign,0,0,3,1);
	PuPlayer.LabelNew(pGameDetails,"GameDetails4",Font_GameDetails,FontSize_GameDetails,Colour_GameDetails,FontRotation_GameDetails,GameDetails_xAlign,GameDetails_yAlign,0,0,3,1);
	PuPlayer.LabelNew(pGameDetails,"GameDetails5",Font_GameDetails,FontSize_GameDetails,Colour_GameDetails,FontRotation_GameDetails,GameDetails_xAlign,GameDetails_yAlign,0,0,3,1);
	PuPlayer.LabelNew(pGameDetails,"GameDetails6",Font_GameDetails,FontSize_GameDetails,Colour_GameDetails,FontRotation_GameDetails,GameDetails_xAlign,GameDetails_yAlign,0,0,3,1);
	PuPlayer.LabelNew(pGameDetails,"GameDetails7",Font_GameDetails,FontSize_GameDetails,Colour_GameDetails,FontRotation_GameDetails,GameDetails_xAlign,GameDetails_yAlign,0,0,3,1);
	PuPlayer.LabelNew(pGameDetails,"GameDetails8",Font_GameDetails,FontSize_GameDetails,Colour_GameDetails,FontRotation_GameDetails,GameDetails_xAlign,GameDetails_yAlign,0,0,3,1);
	PuPlayer.LabelNew(pGameDetails,"GameDetails9",Font_GameDetails,FontSize_GameDetails,Colour_GameDetails,FontRotation_GameDetails,GameDetails_xAlign,GameDetails_yAlign,0,0,3,1);
	PuPlayer.LabelNew(pGameDetails,"GameDetails10",Font_GameDetails,FontSize_GameDetails,Colour_GameDetails,FontRotation_GameDetails,GameDetails_xAlign,GameDetails_yAlign,0,0,3,1);
	PuPlayer.LabelNew(pGameDetails,"GameDetails11",Font_GameDetails,FontSize_GameDetails,Colour_GameDetails,FontRotation_GameDetails,GameDetails_xAlign,GameDetails_yAlign,0,0,3,1);
	PuPlayer.LabelNew(pGameDetails,"GameDetails12",Font_GameDetails,FontSize_GameDetails,Colour_GameDetails,FontRotation_GameDetails,GameDetails_xAlign,GameDetails_yAlign,0,0,3,1);
	PuPlayer.LabelNew(pGameDetails,"GameDetails13",Font_GameDetails,FontSize_GameDetails,Colour_GameDetails,FontRotation_GameDetails,GameDetails_xAlign,GameDetails_yAlign,0,0,3,1);
	PuPlayer.LabelNew(pGameDetails,"GameDetails14",Font_GameDetails,FontSize_GameDetails,Colour_GameDetails,FontRotation_GameDetails,GameDetails_xAlign,GameDetails_yAlign,0,0,3,1);
	PuPlayer.LabelNew(pGameDetails,"GameDetails15",Font_GameDetails,FontSize_GameDetails,Colour_GameDetails,FontRotation_GameDetails,GameDetails_xAlign,GameDetails_yAlign,0,0,3,1);
	PuPlayer.LabelNew(pGameDetails,"GameDetails16",Font_GameDetails,FontSize_GameDetails,Colour_GameDetails,FontRotation_GameDetails,GameDetails_xAlign,GameDetails_yAlign,0,0,3,1);
	PuPlayer.LabelNew(pGameDetails,"GameDetails17",Font_GameDetails,FontSize_GameDetails,Colour_GameDetails,FontRotation_GameDetails,GameDetails_xAlign,GameDetails_yAlign,0,0,3,1);
	PuPlayer.LabelNew(pGameDetails,"GameDetails18",Font_GameDetails,FontSize_GameDetails,Colour_GameDetails,FontRotation_GameDetails,GameDetails_xAlign,GameDetails_yAlign,0,0,3,1);
	PuPlayer.LabelNew(pGameDetails,"GameDetails19",Font_GameDetails,FontSize_GameDetails,Colour_GameDetails,FontRotation_GameDetails,GameDetails_xAlign,GameDetails_yAlign,0,0,3,1);
	PuPlayer.LabelNew(pGameDetails,"GameDetails20",Font_GameDetails,FontSize_GameDetails,Colour_GameDetails,FontRotation_GameDetails,GameDetails_xAlign,GameDetails_yAlign,0,0,3,1);
	}

	PuPlayer.LabelShowPage(pGameInfo,pGameInfo,0,"");  //set default page1  page0 is for 'blank'
	
	if (ShowGameDetails==1) {  //If Game Details Text is enabled
	PuPlayer.LabelShowPage(pGameDetails,pGameDetails,0,"") ; //set default page1  page0 is for 'blank'
	}
	
	}
	
	if (pSplashInfo>-1)	{
		if ((pGameInfo!=pSplashInfo) && (pGameDetails!=pSplashInfo)) {PuPlayer.LabelInit(pSplashInfo);
	    PuPlayer.LabelShowPage(pSplashInfo,0,0,"");  //set default page0 is for 'blank'	                             
		}
        //splash page 2
	PuPlayer.LabelNew(pSplashInfo,"Splash" ,SplashText_Font          ,10,16438789,0,1,1,0,0,1,0);				
	}
	
	}	

   // LabelSet <screen#>, <LabelName>,<String>,<Visible>,<special>

   // <screen#>, same as when adding new label.
   // <LabelName> same as labelname when you added new label.
   // <String>, value to assign label. Note you can add a ~ to insert a line break....see notes on that.
   // <Visible> set visible state of label.
   // <special> this is a special crafter JSON string that can have unlimited values set.

/// Update Labels and Text Zones

function UpdateLabels(js){
	
	if (pGameInfo>-1){

	// No Text in Brackets for GameDisplay, if option is enabled		
	var lb=js.GameDisplay.indexOf('(');
	if ((lb>0) && (NoBracketText>0)) {js.GameDisplay=js.GameDisplay.substr(0,lb-1);}
	
	// "WITH xxxxx GAMES"
	var db_Count= text_count_1.concat(js.listcount.toString().substr(0,5), text_count_2); 

	// Get the TIME
	var db_Time = new Date();
	db_Time = db_Time.toLocaleTimeString().replace(/:\d+ /, ' '); // current time, e.g. "1:54 PM"
	
	

/// CLEAR ALL TEXT ZONES! ///

	/// Clear Playlist Text Zones
	PuPlayer.LabelSet(pGameInfo,"Text_Zone1P","",		1,"{'mt':2, 'xpos':"+Zone1P_xpoz.toString()+", 'ypos':"+Zone1P_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameInfo,"Text_Zone2P","",		1,"{'mt':2, 'xpos':"+Zone2P_xpoz.toString()+", 'ypos':"+Zone2P_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameInfo,"Text_Zone3P","",		1,"{'mt':2, 'xpos':"+Zone3P_xpoz.toString()+", 'ypos':"+Zone3P_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameInfo,"Text_Zone4P","",		1,"{'mt':2, 'xpos':"+Zone4P_xpoz.toString()+", 'ypos':"+Zone4P_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameInfo,"Text_Zone5P","",		1,"{'mt':2, 'xpos':"+Zone5P_xpoz.toString()+", 'ypos':"+Zone5P_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameInfo,"Text_Zone6P","",		1,"{'mt':2, 'xpos':"+Zone6P_xpoz.toString()+", 'ypos':"+Zone6P_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameInfo,"Text_Zone7P","",		1,"{'mt':2, 'xpos':"+Zone7P_xpoz.toString()+", 'ypos':"+Zone7P_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameInfo,"Text_Zone8P","",		1,"{'mt':2, 'xpos':"+Zone8P_xpoz.toString()+", 'ypos':"+Zone8P_ypoz.toString()+" }");
	/// Clear Game Text Zones 
	PuPlayer.LabelSet(pGameInfo,"Text_Zone1G","",		1,"{'mt':2, 'xpos':"+Zone1G_xpoz.toString()+", 'ypos':"+Zone1G_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameInfo,"Text_Zone2G","",		1,"{'mt':2, 'xpos':"+Zone2G_xpoz.toString()+", 'ypos':"+Zone2G_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameInfo,"Text_Zone3G","",		1,"{'mt':2, 'xpos':"+Zone3G_xpoz.toString()+", 'ypos':"+Zone3G_ypoz.toString()+" }"); 
	PuPlayer.LabelSet(pGameInfo,"Text_Zone4G","",		1,"{'mt':2, 'xpos':"+Zone4G_xpoz.toString()+", 'ypos':"+Zone4G_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameInfo,"Text_Zone5G","",		1,"{'mt':2, 'xpos':"+Zone5G_xpoz.toString()+", 'ypos':"+Zone5G_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameInfo,"Text_Zone6G","",		1,"{'mt':2, 'xpos':"+Zone6G_xpoz.toString()+", 'ypos':"+Zone6G_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameInfo,"Text_Zone7G","",		1,"{'mt':2, 'xpos':"+Zone7G_xpoz.toString()+", 'ypos':"+Zone7G_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameInfo,"Text_Zone8G","",		1,"{'mt':2, 'xpos':"+Zone8G_xpoz.toString()+", 'ypos':"+Zone8G_ypoz.toString()+" }");
	/// Clear Function Text Zones
	PuPlayer.LabelSet(pGameInfo,"Text_Zone1F","",		1,"{'mt':2, 'xpos':"+Zone1F_xpoz.toString()+", 'ypos':"+Zone1F_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameInfo,"Text_Zone2F","",		1,"{'mt':2, 'xpos':"+Zone2F_xpoz.toString()+", 'ypos':"+Zone2F_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameInfo,"Text_Zone3F","",		1,"{'mt':2, 'xpos':"+Zone3F_xpoz.toString()+", 'ypos':"+Zone3F_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameInfo,"Text_Zone4F","",		1,"{'mt':2, 'xpos':"+Zone4F_xpoz.toString()+", 'ypos':"+Zone4F_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameInfo,"Text_Zone5F","",		1,"{'mt':2, 'xpos':"+Zone5F_xpoz.toString()+", 'ypos':"+Zone5F_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameInfo,"Text_Zone6F","",		1,"{'mt':2, 'xpos':"+Zone6F_xpoz.toString()+", 'ypos':"+Zone6F_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameInfo,"Text_Zone7F","",		1,"{'mt':2, 'xpos':"+Zone7F_xpoz.toString()+", 'ypos':"+Zone7F_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameInfo,"Text_Zone8F","",		1,"{'mt':2, 'xpos':"+Zone8F_xpoz.toString()+", 'ypos':"+Zone8F_ypoz.toString()+" }");
	/// Clear Home Screen Text Zones
	PuPlayer.LabelSet(pGameInfo,"Text_Zone1H","",		1,"{'mt':2, 'xpos':"+Zone1H_xpoz.toString()+", 'ypos':"+Zone1H_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameInfo,"Text_Zone2H","",		1,"{'mt':2, 'xpos':"+Zone2H_xpoz.toString()+", 'ypos':"+Zone2H_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameInfo,"Text_Zone3H","",		1,"{'mt':2, 'xpos':"+Zone3H_xpoz.toString()+", 'ypos':"+Zone3H_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameInfo,"Text_Zone4H","",		1,"{'mt':2, 'xpos':"+Zone4H_xpoz.toString()+", 'ypos':"+Zone4H_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameInfo,"Text_Zone5H","",		1,"{'mt':2, 'xpos':"+Zone5H_xpoz.toString()+", 'ypos':"+Zone5H_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameInfo,"Text_Zone6H","",		1,"{'mt':2, 'xpos':"+Zone6H_xpoz.toString()+", 'ypos':"+Zone6H_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameInfo,"Text_Zone7H","",		1,"{'mt':2, 'xpos':"+Zone7H_xpoz.toString()+", 'ypos':"+Zone7H_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameInfo,"Text_Zone8H","",		1,"{'mt':2, 'xpos':"+Zone8H_xpoz.toString()+", 'ypos':"+Zone8H_ypoz.toString()+" }");

	if (ShowGameDetails==1) {  //If Game Details Text is enabled
	/// Clear Game Details Text
	PuPlayer.LabelSet(pGameDetails,"GameDetails1","",	1,"{'mt':2, 'xpos':"+GameDetails1_xpoz.toString()+", 'ypos':"+GameDetails1_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails2","",	1,"{'mt':2, 'xpos':"+GameDetails2_xpoz.toString()+", 'ypos':"+GameDetails2_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails3","",	1,"{'mt':2, 'xpos':"+GameDetails3_xpoz.toString()+", 'ypos':"+GameDetails3_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails4","",	1,"{'mt':2, 'xpos':"+GameDetails4_xpoz.toString()+", 'ypos':"+GameDetails4_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails5","",	1,"{'mt':2, 'xpos':"+GameDetails5_xpoz.toString()+", 'ypos':"+GameDetails5_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails6","",	1,"{'mt':2, 'xpos':"+GameDetails6_xpoz.toString()+", 'ypos':"+GameDetails6_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails7","",	1,"{'mt':2, 'xpos':"+GameDetails7_xpoz.toString()+", 'ypos':"+GameDetails7_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails8","",	1,"{'mt':2, 'xpos':"+GameDetails8_xpoz.toString()+", 'ypos':"+GameDetails8_ypoz.toString()+" }");	
	PuPlayer.LabelSet(pGameDetails,"GameDetails9","",	1,"{'mt':2, 'xpos':"+GameDetails9_xpoz.toString()+", 'ypos':"+GameDetails9_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails10","",	1,"{'mt':2, 'xpos':"+GameDetails10_xpoz.toString()+", 'ypos':"+GameDetails10_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails11","",	1,"{'mt':2, 'xpos':"+GameDetails11_xpoz.toString()+", 'ypos':"+GameDetails11_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails12","",	1,"{'mt':2, 'xpos':"+GameDetails12_xpoz.toString()+", 'ypos':"+GameDetails12_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails13","",	1,"{'mt':2, 'xpos':"+GameDetails13_xpoz.toString()+", 'ypos':"+GameDetails13_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails14","",	1,"{'mt':2, 'xpos':"+GameDetails14_xpoz.toString()+", 'ypos':"+GameDetails14_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails15","",	1,"{'mt':2, 'xpos':"+GameDetails15_xpoz.toString()+", 'ypos':"+GameDetails15_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails16","",	1,"{'mt':2, 'xpos':"+GameDetails16_xpoz.toString()+", 'ypos':"+GameDetails16_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails17","",	1,"{'mt':2, 'xpos':"+GameDetails17_xpoz.toString()+", 'ypos':"+GameDetails17_ypoz.toString()+" }");	
	PuPlayer.LabelSet(pGameDetails,"GameDetails18","",	1,"{'mt':2, 'xpos':"+GameDetails18_xpoz.toString()+", 'ypos':"+GameDetails18_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails19","",	1,"{'mt':2, 'xpos':"+GameDetails19_xpoz.toString()+", 'ypos':"+GameDetails19_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails20","",	1,"{'mt':2, 'xpos':"+GameDetails20_xpoz.toString()+", 'ypos':"+GameDetails20_ypoz.toString()+" }");	
	}

/// END of CLEAR TEXT ZONES ///


/// If a Playlist Wheel is Highlighted
	if (js.mtType==1) {  

// Playlist Text Zones: Content

if (dbContent1P == "Custom_Text") {dbContent_Zone1P = text_1P.toString();}
	else if (dbContent1P == "Playlist_Highlighted") {dbContent_Zone1P = prefix1P.toString() + js.GameDisplay.toString();}
	else if (dbContent1P == "Time") {dbContent_Zone1P = prefix1P.toString() + db_Time.toString();}
	else if (dbContent1P == "Playlist_Current") {dbContent_Zone1P = prefix1P.concat(js.PlayListName.toString());}
	else if (dbContent1P == "") {dbContent_Zone1P = "";}

if (dbContent2P == "Custom_Text") {dbContent_Zone2P = text_2P.toString();}
	else if (dbContent2P == "Playlist_Highlighted") {dbContent_Zone2P = prefix2P.toString() + js.GameDisplay.toString();}
	else if (dbContent2P == "Time") {dbContent_Zone2P = prefix2P.toString() + db_Time.toString();}
	else if (dbContent2P == "Playlist_Current") {dbContent_Zone2P = prefix2P.concat(js.PlayListName.toString());}
	else if (dbContent2P == "") {dbContent_Zone2P = "";}

if (dbContent3P == "Custom_Text") {dbContent_Zone3P = text_3P.toString();}
	else if (dbContent3P == "Playlist_Highlighted") {dbContent_Zone3P = prefix3P.toString() + js.GameDisplay.toString();}
	else if (dbContent3P == "Time") {dbContent_Zone3P = prefix3P.toString() + db_Time.toString();}
	else if (dbContent3P == "Playlist_Current") {dbContent_Zone3P = prefix3P.concat(js.PlayListName.toString());}
	else if (dbContent3P == "") {dbContent_Zone3P = "";}

if (dbContent4P == "Custom_Text") {dbContent_Zone4P = text_4P.toString();}
	else if (dbContent4P == "Playlist_Highlighted") {dbContent_Zone4P = prefix4P.toString() + js.GameDisplay.toString();}
	else if (dbContent4P == "Time") {dbContent_Zone4P = prefix4P.toString() + db_Time.toString();}
	else if (dbContent4P == "Playlist_Current") {dbContent_Zone4P = prefix4P.concat(js.PlayListName.toString());}
	else if (dbContent4P == "") {dbContent_Zone4P = "";}

if (dbContent5P == "Custom_Text") {dbContent_Zone5P = text_5P.toString();}
	else if (dbContent5P == "Playlist_Highlighted") {dbContent_Zone5P = prefix5P.toString() + js.GameDisplay.toString();}
	else if (dbContent5P == "Time") {dbContent_Zone5P = prefix5P.toString() + db_Time.toString();}
	else if (dbContent5P == "Playlist_Current") {dbContent_Zone5P = prefix5P.concat(js.PlayListName.toString());}
	else if (dbContent5P == "") {dbContent_Zone5P = "";}

if (dbContent6P == "Custom_Text") {dbContent_Zone6P = text_6P.toString();}
	else if (dbContent6P == "Playlist_Highlighted") {dbContent_Zone6P = prefix6P.toString() + js.GameDisplay.toString();}
	else if (dbContent6P == "Time") {dbContent_Zone6P = prefix6P.toString() + db_Time.toString();}
	else if (dbContent6P == "Playlist_Current") {dbContent_Zone6P = prefix6P.concat(js.PlayListName.toString());}
	else if (dbContent6P == "") {dbContent_Zone6P = "";}

if (dbContent7P == "Custom_Text") {dbContent_Zone7P = text_7P.toString();}
	else if (dbContent7P == "Playlist_Highlighted") {dbContent_Zone7P = prefix7P.toString() + js.GameDisplay.toString();}
	else if (dbContent7P == "Time") {dbContent_Zone7P = prefix7P.toString() + db_Time.toString();}
	else if (dbContent7P == "Playlist_Current") {dbContent_Zone7P = prefix7P.concat(js.PlayListName.toString());}
	else if (dbContent7P == "") {dbContent_Zone7P = "";}

if (dbContent8P == "Custom_Text") {dbContent_Zone8P = text_8P.toString();}
	else if (dbContent8P == "Playlist_Highlighted") {dbContent_Zone8P = prefix8P.toString() + js.GameDisplay.toString();}
	else if (dbContent8P == "Time") {dbContent_Zone8P = prefix8P.toString() + db_Time.toString();}
	else if (dbContent8P == "Playlist_Current") {dbContent_Zone8P = prefix8P.concat(js.PlayListName.toString());}
	else if (dbContent8P == "") {dbContent_Zone8P = "";}

// Home Screen Text Zones: Content

if (dbContent1H == "Custom_Text") {dbContent_Zone1H = text_1H.toString();}
	else if (dbContent1H == "Playlist_Highlighted") {dbContent_Zone1H = prefix1H.toString() + js.GameDisplay.toString();}
	else if (dbContent1H == "Time") {dbContent_Zone1H = prefix1H.toString() + db_Time.toString();}
	else if (dbContent1H == "Playlist_Current") {dbContent_Zone1H = prefix1H.concat(js.PlayListName.toString());}
	else if (dbContent1H == "") {dbContent_Zone1H = "";}

if (dbContent2H == "Custom_Text") {dbContent_Zone2H = text_2H.toString();}
	else if (dbContent2H == "Playlist_Highlighted") {dbContent_Zone2H = prefix2H.toString() + js.GameDisplay.toString();}
	else if (dbContent2H == "Time") {dbContent_Zone2H = prefix2H.toString() + db_Time.toString();}
	else if (dbContent2H == "Playlist_Current") {dbContent_Zone2H = prefix2H.concat(js.PlayListName.toString());}
	else if (dbContent2H == "") {dbContent_Zone2H = "";}

if (dbContent3H == "Custom_Text") {dbContent_Zone3H = text_3H.toString();}
	else if (dbContent3H == "Playlist_Highlighted") {dbContent_Zone3H = prefix3H.toString() + js.GameDisplay.toString();}
	else if (dbContent3H == "Time") {dbContent_Zone3H = prefix3H.toString() + db_Time.toString();}
	else if (dbContent3H == "Playlist_Current") {dbContent_Zone3H = prefix3H.concat(js.PlayListName.toString());}
	else if (dbContent3H == "") {dbContent_Zone3H = "";}

if (dbContent4H == "Custom_Text") {dbContent_Zone4H = text_4H.toString();}
	else if (dbContent4H == "Playlist_Highlighted") {dbContent_Zone4H = prefix4H.toString() + js.GameDisplay.toString();}
	else if (dbContent4H == "Time") {dbContent_Zone4H = prefix4H.toString() + db_Time.toString();}
	else if (dbContent4H == "Playlist_Current") {dbContent_Zone4H = prefix4H.concat(js.PlayListName.toString());}
	else if (dbContent4H == "") {dbContent_Zone4H = "";}

if (dbContent5H == "Custom_Text") {dbContent_Zone5H = text_5H.toString();}
	else if (dbContent5H == "Playlist_Highlighted") {dbContent_Zone5H = prefix5H.toString() + js.GameDisplay.toString();}
	else if (dbContent5H == "Time") {dbContent_Zone5H = prefix5H.toString() + db_Time.toString();}
	else if (dbContent5H == "Playlist_Current") {dbContent_Zone5H = prefix5H.concat(js.PlayListName.toString());}
	else if (dbContent5H == "") {dbContent_Zone5H = "";}

if (dbContent6H == "Custom_Text") {dbContent_Zone6H = text_6H.toString();}
	else if (dbContent6H == "Playlist_Highlighted") {dbContent_Zone6H = prefix6H.toString() + js.GameDisplay.toString();}
	else if (dbContent6H == "Time") {dbContent_Zone6H = prefix6H.toString() + db_Time.toString();}
	else if (dbContent6H == "Playlist_Current") {dbContent_Zone6H = prefix6H.concat(js.PlayListName.toString());}
	else if (dbContent6H == "") {dbContent_Zone6H = "";}

if (dbContent7H == "Custom_Text") {dbContent_Zone7H = text_7H.toString();}
	else if (dbContent7H == "Playlist_Highlighted") {dbContent_Zone7H = prefix7H.toString() + js.GameDisplay.toString();}
	else if (dbContent7H == "Time") {dbContent_Zone7H = prefix7H.toString() + db_Time.toString();}
	else if (dbContent7H == "Playlist_Current") {dbContent_Zone7H = prefix7H.concat(js.PlayListName.toString());}
	else if (dbContent7H == "") {dbContent_Zone7H = "";}

if (dbContent8H == "Custom_Text") {dbContent_Zone8H = text_8H.toString();}
	else if (dbContent8H == "Playlist_Highlighted") {dbContent_Zone8H = prefix8H.toString() + js.GameDisplay.toString();}
	else if (dbContent8H == "Time") {dbContent_Zone8H = prefix8H.toString() + db_Time.toString();}
	else if (dbContent8H == "Playlist_Current") {dbContent_Zone8H = prefix8H.concat(js.PlayListName.toString());}
	else if (dbContent8H == "") {dbContent_Zone8H = "";}

	/// Show Playlist Text Zones

	if (js.PlayListName != "Home") { 
	if (pShow_Text_Zone1P==1) { /// Zone 1P
	PuPlayer.LabelSet(pGameInfo,"Text_Zone1P",dbContent_Zone1P.substr(0,FontMaxChar_Zone1P),	1,"{'mt':2, 'xpos':"+Zone1P_xpoz.toString()+", 'ypos':"+Zone1P_ypoz.toString()+" }");
	}
	if (pShow_Text_Zone2P==1) { /// Zone 2P  
	PuPlayer.LabelSet(pGameInfo,"Text_Zone2P",dbContent_Zone2P.substr(0,FontMaxChar_Zone2P),	1,"{'mt':2, 'xpos':"+Zone2P_xpoz.toString()+", 'ypos':"+Zone2P_ypoz.toString()+" }");
	}
	if (pShow_Text_Zone3P==1) { /// Zone 3P
	PuPlayer.LabelSet(pGameInfo,"Text_Zone3P",dbContent_Zone3P.substr(0,FontMaxChar_Zone3P), 	1,"{'mt':2, 'xpos':"+Zone3P_xpoz.toString()+", 'ypos':"+Zone3P_ypoz.toString()+" }");
	}
	if (pShow_Text_Zone4P==1) { /// Zone 4P 
	PuPlayer.LabelSet(pGameInfo,"Text_Zone4P",dbContent_Zone4P.substr(0,FontMaxChar_Zone4P),	1,"{'mt':2, 'xpos':"+Zone4P_xpoz.toString()+", 'ypos':"+Zone4P_ypoz.toString()+" }");
	}
	if (pShow_Text_Zone5P==1) { /// Zone 5P 
	PuPlayer.LabelSet(pGameInfo,"Text_Zone5P",dbContent_Zone5P.substr(0,FontMaxChar_Zone5P),	1,"{'mt':2, 'xpos':"+Zone5P_xpoz.toString()+", 'ypos':"+Zone5P_ypoz.toString()+" }");
	}
	if (pShow_Text_Zone6P==1) { /// Zone 6P
	PuPlayer.LabelSet(pGameInfo,"Text_Zone6P",dbContent_Zone6P.substr(0,FontMaxChar_Zone6P),	1,"{'mt':2, 'xpos':"+Zone6P_xpoz.toString()+", 'ypos':"+Zone6P_ypoz.toString()+" }");
	}
	if (pShow_Text_Zone7P==1) { /// Zone 7P
	PuPlayer.LabelSet(pGameInfo,"Text_Zone7P",dbContent_Zone7P.substr(0,FontMaxChar_Zone7P),	1,"{'mt':2, 'xpos':"+Zone7P_xpoz.toString()+", 'ypos':"+Zone7P_ypoz.toString()+" }");
	}
	if (pShow_Text_Zone8P==1) { /// Zone 8P
	PuPlayer.LabelSet(pGameInfo,"Text_Zone8P",dbContent_Zone8P.substr(0,FontMaxChar_Zone8P),	1,"{'mt':2, 'xpos':"+Zone8P_xpoz.toString()+", 'ypos':"+Zone8P_ypoz.toString()+" }");
	}
	}
	
	/// POPPER SYSTEM MENU TEXT
	if (js.PlayListName != "Home") { 
	
	/// When "Favorites" is highlighted
	if (js.GameDisplay == "Favourites"){
	PuPlayer.LabelSet(pGameInfo,"Text_Zone3F",Favorites_Zone3P.substr(0,MaxCharSystem_Zone3),	1,"{'mt':2, 'xpos':"+Zone3F_xpoz.toString()+",'ypos':"+Zone3F_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameInfo,"Text_Zone4F",Favorites_Zone4P.substr(0,MaxCharSystem_Zone4),	1,"{'mt':2, 'xpos':"+Zone4F_xpoz.toString()+",'ypos':"+Zone4F_ypoz.toString()+" }");
	}
	/// When "Most Played" is highlighted
	if (js.GameDisplay == "Most Played"){
	PuPlayer.LabelSet(pGameInfo,"Text_Zone3F",MostPlayed_Zone3P.substr(0,MaxCharSystem_Zone3),	1,"{'mt':2, 'xpos':"+Zone3F_xpoz.toString()+",'ypos':"+Zone3F_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameInfo,"Text_Zone4F",MostPlayed_Zone4P.substr(0,MaxCharSystem_Zone4),	1,"{'mt':2, 'xpos':"+Zone4F_xpoz.toString()+",'ypos':"+Zone4F_ypoz.toString()+" }");
	}
	/// When "Recently Played" is highlighted
	if (js.GameDisplay == "Played Recently"){
	PuPlayer.LabelSet(pGameInfo,"Text_Zone3F",RecentlyPlayed_Zone3P.substr(0,MaxCharSystem_Zone3),	1,"{'mt':2, 'xpos':"+Zone3F_xpoz.toString()+",'ypos':"+Zone3F_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameInfo,"Text_Zone4F",RecentlyPlayed_Zone4P.substr(0,MaxCharSystem_Zone4),	1,"{'mt':2, 'xpos':"+Zone4F_xpoz.toString()+",'ypos':"+Zone4F_ypoz.toString()+" }");
	}
	/// When "GoBack" is highlighted
	if (js.GameDisplay == "Go Back"){
	PuPlayer.LabelSet(pGameInfo,"Text_Zone3F",GoBack_Zone3P.substr(0,MaxCharSystem_Zone3),	1,"{'mt':2, 'xpos':"+Zone3F_xpoz.toString()+",'ypos':"+Zone3F_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameInfo,"Text_Zone4F",GoBack_Zone4P.substr(0,MaxCharSystem_Zone4),	1,"{'mt':2, 'xpos':"+Zone4F_xpoz.toString()+",'ypos':"+Zone4F_ypoz.toString()+" }");
	}
	
	}
	
	/// If on the HOME Screen
	if (js.PlayListName == "Home") { 
	
	/// show HOME Playlist Text Zones
	if (pShow_Text_Zone1H==1) { /// Zone 1H
	PuPlayer.LabelSet(pGameInfo,"Text_Zone1H",dbContent_Zone1H.substr(0,FontMaxChar_Zone1H),	1,"{'mt':2, 'xpos':"+Zone1H_xpoz.toString()+",'ypos':"+Zone1H_ypoz.toString()+" }");
	}
	if (pShow_Text_Zone2H==1) { /// Zone 2H  
	PuPlayer.LabelSet(pGameInfo,"Text_Zone2H",dbContent_Zone2H.substr(0,FontMaxChar_Zone2H),	1,"{'mt':2, 'xpos':"+Zone2H_xpoz.toString()+",'ypos':"+Zone2H_ypoz.toString()+" }");
	}
	if (pShow_Text_Zone3H==1){  /// Zone 3H 
	PuPlayer.LabelSet(pGameInfo,"Text_Zone3H",dbContent_Zone3H.substr(0,FontMaxChar_Zone3H),  	1,"{'mt':2, 'xpos':"+Zone3H_xpoz.toString()+",'ypos':"+Zone3H_ypoz.toString()+" }");
	}
	if (pShow_Text_Zone4H==1) { /// Zone 4H 
	PuPlayer.LabelSet(pGameInfo,"Text_Zone4H",dbContent_Zone4H.substr(0,FontMaxChar_Zone4H),	1,"{'mt':2, 'xpos':"+Zone4H_xpoz.toString()+",'ypos':"+Zone4H_ypoz.toString()+" }");
	}
	if (pShow_Text_Zone5H==1) { /// Zone 5H 
	PuPlayer.LabelSet(pGameInfo,"Text_Zone5H",dbContent_Zone5H.substr(0,FontMaxChar_Zone5H),	1,"{'mt':2, 'xpos':"+Zone5H_xpoz.toString()+",'ypos':"+Zone5H_ypoz.toString()+" }");
	}
	if (pShow_Text_Zone6H==1) { /// Zone 6H
	PuPlayer.LabelSet(pGameInfo,"Text_Zone6H",dbContent_Zone6H.substr(0,FontMaxChar_Zone6H),	1,"{'mt':2, 'xpos':"+Zone6H_xpoz.toString()+",'ypos':"+Zone6H_ypoz.toString()+" }");
	}
	if (pShow_Text_Zone7H==1) { /// Zone 7H
	PuPlayer.LabelSet(pGameInfo,"Text_Zone7H",dbContent_Zone7H.substr(0,FontMaxChar_Zone7H),	1,"{'mt':2, 'xpos':"+Zone7H_xpoz.toString()+",'ypos':"+Zone7H_ypoz.toString()+" }");
	}
	if (pShow_Text_Zone8H==1) { /// Zone 8H
	PuPlayer.LabelSet(pGameInfo,"Text_Zone8H",dbContent_Zone8H.substr(0,FontMaxChar_Zone8H),	1,"{'mt':2, 'xpos':"+Zone8H_xpoz.toString()+",'ypos':"+Zone8H_ypoz.toString()+" }");
	}
	}
/// End If on HOME Screen	

	}	
/// END If a Playlist Wheel is Highlighted


	
	/// grab game db info
	
/// If a Game Wheel is Highlighted
	if (js.mtType==0) {

	if (js.inAttractMode==1 && js.fadeoutTime>0) {
	ClearText();
	return;
	}

	jsDetails = eval('obj = ' + App.GetDetailsJSON);	
	
	/// (Game Display and No Version Info)
	if (GameVersionInfo==0) { 
	var Game_Extra = js.GameDisplay.toString();
	}
	/// (Game Display with empty Version Info)
	if ((GameVersionInfo==1) && (jsDetails.GAMEVER.toString().length<1)) { 
	var Game_Extra = js.GameDisplay.toString();
	}
	/// (Game Display with Version Info)
	if ((jsDetails.GAMEVER.toString().length>0) && (GameVersionInfo>0)) { 
	var Game_Extra = js.GameDisplay.toString() + " (" + jsDetails.GAMEVER + ")"; 
	}

// Game Text Zones: Content

	if (dbContent1G == "Custom_Text") {dbContent_Zone1G = text_1G.toString();}
	else if (dbContent1G == "Game") {dbContent_Zone1G = prefix1G.toString() + Game_Extra.toString();}
	else if (dbContent1G == "Time") {dbContent_Zone1G = prefix1G.toString() + db_Time.toString();}
	else if (dbContent1G == "Count") {dbContent_Zone1G = prefix1G.toString() + db_Count.toString();}
	else if (dbContent1G == "Emulator") {dbContent_Zone1G = prefix1G.concat(js.EmuDisplay.toString());}
	else if (dbContent1G == "Playlist_Current") {dbContent_Zone1G = prefix1G.concat(js.PlayListName.toString());}
	else if (dbContent1G == "") {dbContent_Zone1G = "";}
	else if (jsDetails !== null) {dbContent_Zone1G = prefix1G.concat(jsDetails[dbContent1G].toString());}

	if (dbContent2G == "Custom_Text") {dbContent_Zone2G = text_2G.toString();}
	else if (dbContent2G == "Game") {dbContent_Zone2G = prefix2G.toString() + Game_Extra.toString();}
	else if (dbContent2G == "Time") {dbContent_Zone2G = prefix2G.toString() + db_Time.toString();}
	else if (dbContent2G == "Count") {dbContent_Zone2G = prefix2G.toString() + db_Count.toString();}
	else if (dbContent2G == "Emulator") {dbContent_Zone2G = prefix2G.concat(js.EmuDisplay.toString());}
	else if (dbContent2G == "Playlist_Current") {dbContent_Zone2G = prefix2G.concat(js.PlayListName.toString());}
	else if (dbContent2G == "") {dbContent_Zone2G = "";}
	else if (jsDetails !== null) {dbContent_Zone2G = prefix2G.concat(jsDetails[dbContent2G].toString());}

	if (dbContent3G == "Custom_Text") {dbContent_Zone3G = text_3G.toString();}
	else if (dbContent3G == "Game") {dbContent_Zone3G = prefix3G.toString() + Game_Extra.toString();}
	else if (dbContent3G == "Time") {dbContent_Zone3G = prefix3G.toString() + db_Time.toString();}
	else if (dbContent3G == "Count") {dbContent_Zone3G = prefix3G.toString() + db_Count.toString();}
	else if (dbContent3G == "Emulator") {dbContent_Zone3G = prefix3G.concat(js.EmuDisplay.toString());}
	else if (dbContent3G == "Playlist_Current") {dbContent_Zone3G = prefix3G.concat(js.PlayListName.toString());}
	else if (dbContent3G == "") {dbContent_Zone3G = "";}
	else if (jsDetails !== null) {dbContent_Zone3G = prefix3G.concat(jsDetails[dbContent3G].toString());}

	if (dbContent4G == "Custom_Text") {dbContent_Zone4G = text_4G.toString();}
	else if (dbContent4G == "Game") {dbContent_Zone4G = prefix4G.toString() + Game_Extra.toString();}
	else if (dbContent4G == "Time") {dbContent_Zone4G = prefix4G.toString() + db_Time.toString();}
	else if (dbContent4G == "Count") {dbContent_Zone4G = prefix4G.toString() + db_Count.toString();}
	else if (dbContent4G == "Emulator") {dbContent_Zone4G = prefix4G.concat(js.EmuDisplay.toString());}
	else if (dbContent4G == "Playlist_Current") {dbContent_Zone4G = prefix4G.concat(js.PlayListName.toString());}
	else if (dbContent4G == "") {dbContent_Zone4G = "";}
	else if (jsDetails !== null) {dbContent_Zone4G = prefix4G.concat(jsDetails[dbContent4G].toString());}

	if (dbContent5G == "Custom_Text") {dbContent_Zone5G = text_5G.toString();}
	else if (dbContent5G == "Game") {dbContent_Zone5G = prefix5G.toString() + Game_Extra.toString();}
	else if (dbContent5G == "Time") {dbContent_Zone5G = prefix5G.toString() + db_Time.toString();}
	else if (dbContent5G == "Count") {dbContent_Zone5G = prefix5G.toString() + db_Count.toString();}
	else if (dbContent5G == "Emulator") {dbContent_Zone5G = prefix5G.concat(js.EmuDisplay.toString());}
	else if (dbContent5G == "Playlist_Current") {dbContent_Zone5G = prefix5G.concat(js.PlayListName.toString());}
	else if (dbContent5G == "") {dbContent_Zone5G = "";}
	else if (jsDetails !== null) {dbContent_Zone5G = prefix5G.concat(jsDetails[dbContent5G].toString());}

	if (dbContent6G == "Custom_Text") {dbContent_Zone6G = text_6G.toString();}
	else if (dbContent6G == "Game") {dbContent_Zone6G = prefix6G.toString() + Game_Extra.toString();}
	else if (dbContent6G == "Time") {dbContent_Zone6G = prefix6G.toString() + db_Time.toString();}
	else if (dbContent6G == "Count") {dbContent_Zone6G = prefix6G.toString() + db_Count.toString();}
	else if (dbContent6G == "Emulator") {dbContent_Zone6G = prefix6G.concat(js.EmuDisplay.toString());}
	else if (dbContent6G == "Playlist_Current") {dbContent_Zone6G = prefix6G.concat(js.PlayListName.toString());}
	else if (dbContent6G == "") {dbContent_Zone6G = "";}
	else if (jsDetails !== null) {dbContent_Zone6G = prefix6G.concat(jsDetails[dbContent6G].toString());}

	if (dbContent7G == "Custom_Text") {dbContent_Zone7G = text_7G.toString();}
	else if (dbContent7G == "Game") {dbContent_Zone7G = prefix7G.toString() + Game_Extra.toString();}
	else if (dbContent7G == "Time") {dbContent_Zone7G = prefix7G.toString() + db_Time.toString();}
	else if (dbContent7G == "Count") {dbContent_Zone7G = prefix7G.toString() + db_Count.toString();}
	else if (dbContent7G == "Emulator") {dbContent_Zone7G = prefix7G.concat(js.EmuDisplay.toString());}
	else if (dbContent7G == "Playlist_Current") {dbContent_Zone7G = prefix7G.concat(js.PlayListName.toString());}
	else if (dbContent7G == "") {dbContent_Zone7G = "";}
	else if (jsDetails !== null) {dbContent_Zone7G = prefix7G.concat(jsDetails[dbContent7G].toString());}

	if (dbContent8G == "Custom_Text") {dbContent_Zone8G = text_8G.toString();}
	else if (dbContent8G == "Game") {dbContent_Zone8G = prefix8G.toString() + Game_Extra.toString();}
	else if (dbContent8G == "Time") {dbContent_Zone8G = prefix8G.toString() + db_Time.toString();}
	else if (dbContent8G == "Count") {dbContent_Zone8G = prefix8G.toString() + db_Count.toString();}
	else if (dbContent8G == "Emulator") {dbContent_Zone8G = prefix8G.concat(js.EmuDisplay.toString());}
	else if (dbContent8G == "Playlist_Current") {dbContent_Zone8G = prefix8G.concat(js.PlayListName.toString());}
	else if (dbContent8G == "") {dbContent_Zone8G = "";}
	else if (jsDetails !== null) {dbContent_Zone8G = prefix8G.concat(jsDetails[dbContent8G].toString());}

	/// Show Game Text Zones
	if (pShow_Text_Zone1G==1) { /// Zone 1G (Manufacturer)
	PuPlayer.LabelSet(pGameInfo,"Text_Zone1G",dbContent_Zone1G.substr(0,FontMaxChar_Zone1G),	1,"{'mt':2, 'xpos':"+Zone1G_xpoz.toString()+",'ypos':"+Zone1G_ypoz.toString()+" }");
	}
	if (pShow_Text_Zone2G==1) { /// Zone 2G (Year)	  
	PuPlayer.LabelSet(pGameInfo,"Text_Zone2G",dbContent_Zone2G.substr(0,FontMaxChar_Zone2G),	1,"{'mt':2, 'xpos':"+Zone2G_xpoz.toString()+",'ypos':"+Zone2G_ypoz.toString()+" }");
	}
	if (pShow_Text_Zone3G==1) { /// Zone 3G (GameDisplay)
	PuPlayer.LabelSet(pGameInfo,"Text_Zone3G",dbContent_Zone3G.substr(0,FontMaxChar_Zone3G),	1,"{'mt':2, 'xpos':"+Zone3G_xpoz.toString()+",'ypos':"+Zone3G_ypoz.toString()+" }"); 
	}
	if (pShow_Text_Zone4G==1) { /// Zone 4G (Count of Games)
	PuPlayer.LabelSet(pGameInfo,"Text_Zone4G",dbContent_Zone4G.substr(0,FontMaxChar_Zone4G),	1,"{'mt':2, 'xpos':"+Zone4G_xpoz.toString()+",'ypos':"+Zone4G_ypoz.toString()+" }");
	}
	if (pShow_Text_Zone5G==1) { /// Zone 5G 
	PuPlayer.LabelSet(pGameInfo,"Text_Zone5G",dbContent_Zone5G.substr(0,FontMaxChar_Zone5G),	1,"{'mt':2, 'xpos':"+Zone5G_xpoz.toString()+",'ypos':"+Zone5G_ypoz.toString()+" }");
	}
	if (pShow_Text_Zone6G==1) { /// Zone 6G
	PuPlayer.LabelSet(pGameInfo,"Text_Zone6G",dbContent_Zone6G.substr(0,FontMaxChar_Zone6G),	1,"{'mt':2, 'xpos':"+Zone6G_xpoz.toString()+",'ypos':"+Zone6G_ypoz.toString()+" }");
	}
	if (pShow_Text_Zone7G==1) { /// Zone 7G (Playlist)
	PuPlayer.LabelSet(pGameInfo,"Text_Zone7G",dbContent_Zone7G.substr(0,FontMaxChar_Zone7G),	1,"{'mt':2, 'xpos':"+Zone7G_xpoz.toString()+",'ypos':"+Zone7G_ypoz.toString()+" }");
	}
	if (pShow_Text_Zone8G==1) { /// Zone 8G (Emulator)
	PuPlayer.LabelSet(pGameInfo,"Text_Zone8G",dbContent_Zone8G.substr(0,FontMaxChar_Zone8G),	1,"{'mt':2, 'xpos':"+Zone8G_xpoz.toString()+",'ypos':"+Zone8G_ypoz.toString()+" }");
	}
	
}


///  END If a Game Wheel is Highlighted


///  If a Function Wheel is Highlighted (when in a Game Menu)

	if (js.mtType==2) {
	
// Function Text Zones: Content

	if (dbContent1F == "Custom_Text") {dbContent_Zone1F = text_1F.toString();}
	else if (dbContent1F == "Function") {dbContent_Zone1F = js.GameDisplay.toString();}
	else if (dbContent1F == "Time") {dbContent_Zone1F = prefix1F.toString() + db_Time.toString();}
	else if (dbContent1F == "Count") {dbContent_Zone1F = prefix1F.toString() + db_Count.toString();}
	else if (dbContent1F == "Emulator") {dbContent_Zone1F = prefix1F.concat(js.EmuDisplay.toString());}
	else if (dbContent1F == "Playlist_Current") {dbContent_Zone1F = prefix1F.concat(js.PlayListName.toString());}
	else if (dbContent1F == "") {dbContent_Zone1F = "";}
	else if (jsDetails !== null) {dbContent_Zone1F = prefix1F.concat(jsDetails[dbContent1F].toString());}

	if (dbContent2F == "Custom_Text") {dbContent_Zone2F = text_2F.toString();}
	else if (dbContent2F == "Function") {dbContent_Zone2F = js.GameDisplay.toString();}
	else if (dbContent2F == "Time") {dbContent_Zone2F = prefix2F.toString() + db_Time.toString();}
	else if (dbContent2F == "Count") {dbContent_Zone2F = prefix2F.toString() + db_Count.toString();}
	else if (dbContent2F == "Emulator") {dbContent_Zone2F = prefix2F.concat(js.EmuDisplay.toString());}
	else if (dbContent2F == "Playlist_Current") {dbContent_Zone2F = prefix2F.concat(js.PlayListName.toString());}
	else if (dbContent2F == "") {dbContent_Zone2F = "";}
	else if (jsDetails !== null) {dbContent_Zone2F = prefix2F.concat(jsDetails[dbContent2F].toString());}

	if (dbContent3F == "Custom_Text") {dbContent_Zone3F = text_3F.toString();}
	else if (dbContent3F == "Function") {dbContent_Zone3F = js.GameDisplay.toString();}
	else if (dbContent3F == "Time") {dbContent_Zone3F = prefix3F.toString() + db_Time.toString();}
	else if (dbContent3F == "Count") {dbContent_Zone3F = prefix3F.toString() + db_Count.toString();}
	else if (dbContent3F == "Emulator") {dbContent_Zone3F = prefix3F.concat(js.EmuDisplay.toString());}
	else if (dbContent3F == "Playlist_Current") {dbContent_Zone3F = prefix3F.concat(js.PlayListName.toString());}
	else if (dbContent3F == "") {dbContent_Zone3F = "";}
	else if (jsDetails !== null) {dbContent_Zone3F = prefix3F.concat(jsDetails[dbContent3F].toString());}

	if (dbContent4F == "Custom_Text") {dbContent_Zone4F = text_4F.toString();}
	else if (dbContent4F == "Function") {dbContent_Zone4F = js.GameDisplay.toString();}
	else if (dbContent4F == "Time") {dbContent_Zone4F = prefix4F.toString() + db_Time.toString();}
	else if (dbContent4F == "Count") {dbContent_Zone4F = prefix4F.toString() + db_Count.toString();}
	else if (dbContent4F == "Emulator") {dbContent_Zone4F = prefix4F.concat(js.EmuDisplay.toString());}
	else if (dbContent4F == "Playlist_Current") {dbContent_Zone4F = prefix4F.concat(js.PlayListName.toString());}
	else if (dbContent4F == "") {dbContent_Zone4F = "";}
	else if (jsDetails !== null) {dbContent_Zone4F = prefix4F.concat(jsDetails[dbContent4F].toString());}

	if (dbContent5F == "Custom_Text") {dbContent_Zone5F = text_5F.toString();}
	else if (dbContent5F == "Function") {dbContent_Zone5F = js.GameDisplay.toString();}
	else if (dbContent5F == "Time") {dbContent_Zone5F = prefix5F.toString() + db_Time.toString();}
	else if (dbContent5F == "Count") {dbContent_Zone5F = prefix5F.toString() + db_Count.toString();}
	else if (dbContent5F == "Emulator") {dbContent_Zone5F = prefix5F.concat(js.EmuDisplay.toString());}
	else if (dbContent5F == "Playlist_Current") {dbContent_Zone5F = prefix5F.concat(js.PlayListName.toString());}
	else if (dbContent5F == "") {dbContent_Zone5F = "";}
	else if (jsDetails !== null) {dbContent_Zone5F = prefix5F.concat(jsDetails[dbContent5F].toString());}

	if (dbContent6F == "Custom_Text") {dbContent_Zone6F = text_6F.toString();}
	else if (dbContent6F == "Function") {dbContent_Zone6F = js.GameDisplay.toString();}
	else if (dbContent6F == "Time") {dbContent_Zone6F = prefix6F.toString() + db_Time.toString();}
	else if (dbContent6F == "Count") {dbContent_Zone6F = prefix6F.toString() + db_Count.toString();}
	else if (dbContent6F == "Emulator") {dbContent_Zone6F = prefix6F.concat(js.EmuDisplay.toString());}
	else if (dbContent6F == "Playlist_Current") {dbContent_Zone6F = prefix6F.concat(js.PlayListName.toString());}
	else if (dbContent6F == "") {dbContent_Zone6F = "";}
	else if (jsDetails !== null) {dbContent_Zone6F = prefix6F.concat(jsDetails[dbContent6F].toString());}

	if (dbContent7F == "Custom_Text") {dbContent_Zone7F = text_7F.toString();}
	else if (dbContent7F == "Function") {dbContent_Zone7F = js.GameDisplay.toString();}
	else if (dbContent7F == "Time") {dbContent_Zone7F = prefix7F.toString() + db_Time.toString();}
	else if (dbContent7F == "Count") {dbContent_Zone7F = prefix7F.toString() + db_Count.toString();}
	else if (dbContent7F == "Emulator") {dbContent_Zone7F = prefix7F.concat(js.EmuDisplay.toString());}
	else if (dbContent7F == "Playlist_Current") {dbContent_Zone7F = prefix7F.concat(js.PlayListName.toString());}
	else if (dbContent7F == "") {dbContent_Zone7F = "";}
	else if (jsDetails !== null) {dbContent_Zone7F = prefix7F.concat(jsDetails[dbContent7F].toString());}

	if (dbContent8F == "Custom_Text") {dbContent_Zone8F = text_8F.toString();}
	else if (dbContent8F == "Function") {dbContent_Zone8F = js.GameDisplay.toString();}
	else if (dbContent8F == "Time") {dbContent_Zone8F = prefix8F.toString() + db_Time.toString();}
	else if (dbContent8F == "Count") {dbContent_Zone8F = prefix8F.toString() + db_Count.toString();}
	else if (dbContent8F == "Emulator") {dbContent_Zone8F = prefix8F.concat(js.EmuDisplay.toString());}
	else if (dbContent8F == "Playlist_Current") {dbContent_Zone8F = prefix8F.concat(js.PlayListName.toString());}
	else if (dbContent8F == "") {dbContent_Zone8F = "";}
	else if (jsDetails !== null) {dbContent_Zone8F = prefix8F.concat(jsDetails[dbContent8F].toString());}

	/// When "Start Game" wheel is highlighed, display Text Zones
	if (js.GameDisplay =="Start Game") {
	
	/// Show Function Text Zones
	if (pShow_Text_Zone1F==1) { /// Zone 1F
	PuPlayer.LabelSet(pGameInfo,"Text_Zone1F",dbContent_Zone1F.substr(0,FontMaxChar_Zone1F),	1,"{'mt':2, 'xpos':"+Zone1F_xpoz.toString()+",'ypos':"+Zone1F_ypoz.toString()+" }");
	}
	if (pShow_Text_Zone2F==1) { /// Zone 2F  
	PuPlayer.LabelSet(pGameInfo,"Text_Zone2F",dbContent_Zone2F.substr(0,FontMaxChar_Zone2F),	1,"{'mt':2, 'xpos':"+Zone2F_xpoz.toString()+",'ypos':"+Zone2F_ypoz.toString()+" }");
	}
	if (pShow_Text_Zone3F==1) { /// Zone 3F 
	PuPlayer.LabelSet(pGameInfo,"Text_Zone3F",dbContent_Zone3F.substr(0,FontMaxChar_Zone3F),	1,"{'mt':2, 'xpos':"+Zone3F_xpoz.toString()+",'ypos':"+Zone3F_ypoz.toString()+" }");
	}
	if (pShow_Text_Zone4F==1) { /// Zone 4F 
	PuPlayer.LabelSet(pGameInfo,"Text_Zone4F",dbContent_Zone4F.substr(0,FontMaxChar_Zone4F),	1,"{'mt':2, 'xpos':"+Zone4F_xpoz.toString()+",'ypos':"+Zone4F_ypoz.toString()+" }");
	}
	if (pShow_Text_Zone5F==1) { /// Zone 5F 
	PuPlayer.LabelSet(pGameInfo,"Text_Zone5F",dbContent_Zone5F.substr(0,FontMaxChar_Zone5F),	1,"{'mt':2, 'xpos':"+Zone5F_xpoz.toString()+",'ypos':"+Zone5F_ypoz.toString()+" }");
	}
	if (pShow_Text_Zone6F==1) { /// Zone 6F
	PuPlayer.LabelSet(pGameInfo,"Text_Zone6F",dbContent_Zone6F.substr(0,FontMaxChar_Zone6F),	1,"{'mt':2, 'xpos':"+Zone6F_xpoz.toString()+",'ypos':"+Zone6F_ypoz.toString()+" }");
	}
	if (pShow_Text_Zone7F==1) { /// Zone 7F
	PuPlayer.LabelSet(pGameInfo,"Text_Zone7F",dbContent_Zone7F.substr(0,FontMaxChar_Zone7F),	1,"{'mt':2, 'xpos':"+Zone7F_xpoz.toString()+",'ypos':"+Zone7F_ypoz.toString()+" }");
	}
	if (pShow_Text_Zone8F==1) { /// Zone 8F
	PuPlayer.LabelSet(pGameInfo,"Text_Zone8F",dbContent_Zone8F.substr(0,FontMaxChar_Zone8F),	1,"{'mt':2, 'xpos':"+Zone8F_xpoz.toString()+",'ypos':"+Zone8F_ypoz.toString()+" }");
	}
	}		

	/// When Game Details is Highlighted
	if ((js.GameDisplay == "Game Details") && (ShowGameDetails == 1)){
	
	dbGameDetails1 = prefix_GameDetails1.concat(jsDetails.GameName.toString());	
	dbGameDetails2 = prefix_GameDetails2.concat(jsDetails.Manufact.toString());	
	dbGameDetails3 = prefix_GameDetails3.concat(jsDetails.GameYear.toString());	
	dbGameDetails4 = prefix_GameDetails4.concat(js.PlayListName.toString());	
	dbGameDetails5 = prefix_GameDetails5.concat(js.EmuDisplay.toString());	
	dbGameDetails6 = prefix_GameDetails6.concat(jsDetails.GAMEVER.toString());	
	dbGameDetails7 = prefix_GameDetails7.concat(jsDetails.NumPlayers.toString());	
	dbGameDetails8 = prefix_GameDetails8.concat(jsDetails.GameType.toString());	
	dbGameDetails9 = prefix_GameDetails9.concat(jsDetails.Author.toString());	
	dbGameDetails10 = prefix_GameDetails10.concat(jsDetails.GameTheme.toString());	
	dbGameDetails11 = prefix_GameDetails11.concat(jsDetails.GameRating.toString());	
	dbGameDetails12 = prefix_GameDetails12.concat(jsDetails.IPDBNum.toString());	
	dbGameDetails13 = prefix_GameDetails13.concat(jsDetails.Category.toString());	
	dbGameDetails14 = prefix_GameDetails14.concat(jsDetails.TAGS.toString());	
	dbGameDetails15 = prefix_GameDetails15.concat(jsDetails.GameFileName.toString());	
	dbGameDetails16 = prefix_GameDetails16.concat(jsDetails.ROM.toString());	
	dbGameDetails17 = prefix_GameDetails17.concat(jsDetails.LaunchCustomVar.toString());	
	dbGameDetails18 = prefix_GameDetails18.concat(jsDetails.CUSTOM2.toString());	
	dbGameDetails19 = prefix_GameDetails19.concat(jsDetails.CUSTOM3.toString());	
	dbGameDetails20 = prefix_GameDetails20.concat(jsDetails.AltRunMode.toString());	
		
	PuPlayer.LabelSet(pGameDetails,"GameDetails1",dbGameDetails1.substr(0,MaxChar_GameDetails1),	1,"{'mt':2, 'xpos':"+GameDetails1_xpoz.toString()+", 'ypos':"+GameDetails1_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails2",dbGameDetails2.substr(0,MaxChar_GameDetails2),	1,"{'mt':2, 'xpos':"+GameDetails2_xpoz.toString()+", 'ypos':"+GameDetails2_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails3",dbGameDetails3.substr(0,MaxChar_GameDetails3),	1,"{'mt':2, 'xpos':"+GameDetails3_xpoz.toString()+", 'ypos':"+GameDetails3_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails4",dbGameDetails4.substr(0,MaxChar_GameDetails4),	1,"{'mt':2, 'xpos':"+GameDetails4_xpoz.toString()+", 'ypos':"+GameDetails4_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails5",dbGameDetails5.substr(0,MaxChar_GameDetails5),	1,"{'mt':2, 'xpos':"+GameDetails5_xpoz.toString()+", 'ypos':"+GameDetails5_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails6",dbGameDetails6.substr(0,MaxChar_GameDetails6),	1,"{'mt':2, 'xpos':"+GameDetails6_xpoz.toString()+", 'ypos':"+GameDetails6_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails7",dbGameDetails7.substr(0,MaxChar_GameDetails7),	1,"{'mt':2, 'xpos':"+GameDetails7_xpoz.toString()+", 'ypos':"+GameDetails7_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails8",dbGameDetails8.substr(0,MaxChar_GameDetails8),	1,"{'mt':2, 'xpos':"+GameDetails8_xpoz.toString()+", 'ypos':"+GameDetails8_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails9",dbGameDetails9.substr(0,MaxChar_GameDetails9),	1,"{'mt':2, 'xpos':"+GameDetails9_xpoz.toString()+", 'ypos':"+GameDetails9_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails10",dbGameDetails10.substr(0,MaxChar_GameDetails10),	1,"{'mt':2, 'xpos':"+GameDetails10_xpoz.toString()+", 'ypos':"+GameDetails10_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails11",dbGameDetails11.substr(0,MaxChar_GameDetails11),	1,"{'mt':2, 'xpos':"+GameDetails11_xpoz.toString()+", 'ypos':"+GameDetails11_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails12",dbGameDetails12.substr(0,MaxChar_GameDetails12),	1,"{'mt':2, 'xpos':"+GameDetails12_xpoz.toString()+", 'ypos':"+GameDetails12_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails13",dbGameDetails13.substr(0,MaxChar_GameDetails13),	1,"{'mt':2, 'xpos':"+GameDetails13_xpoz.toString()+", 'ypos':"+GameDetails13_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails14",dbGameDetails14.substr(0,MaxChar_GameDetails14),	1,"{'mt':2, 'xpos':"+GameDetails14_xpoz.toString()+", 'ypos':"+GameDetails14_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails15",dbGameDetails15.substr(0,MaxChar_GameDetails15),	1,"{'mt':2, 'xpos':"+GameDetails15_xpoz.toString()+", 'ypos':"+GameDetails15_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails16",dbGameDetails16.substr(0,MaxChar_GameDetails16),	1,"{'mt':2, 'xpos':"+GameDetails16_xpoz.toString()+", 'ypos':"+GameDetails16_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails17",dbGameDetails17.substr(0,MaxChar_GameDetails17),	1,"{'mt':2, 'xpos':"+GameDetails17_xpoz.toString()+", 'ypos':"+GameDetails17_ypoz.toString()+" }");	
	PuPlayer.LabelSet(pGameDetails,"GameDetails18",dbGameDetails18.substr(0,MaxChar_GameDetails18),	1,"{'mt':2, 'xpos':"+GameDetails18_xpoz.toString()+", 'ypos':"+GameDetails18_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails19",dbGameDetails19.substr(0,MaxChar_GameDetails19),	1,"{'mt':2, 'xpos':"+GameDetails19_xpoz.toString()+", 'ypos':"+GameDetails19_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails20",dbGameDetails20.substr(0,MaxChar_GameDetails20),	1,"{'mt':2, 'xpos':"+GameDetails20_xpoz.toString()+", 'ypos':"+GameDetails20_ypoz.toString()+" }");	
	}
	/// POPPER SYSTEM MENU TEXT
	
	/// When in Record Menu
	if (js.GameDisplay == "Record Topper" || js.GameDisplay=="Record DMD" || js.GameDisplay=="Record BackGlass" || js.GameDisplay=="Record PlayField") {
	PuPlayer.LabelSet(pGameInfo,"Text_Zone3F",RecordOptions_Zone3F.substr(0,MaxCharSystem_Zone3),	1,"{'mt':2, 'xpos':"+Zone3F_xpoz.toString()+",'ypos':"+Zone3F_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameInfo,"Text_Zone4F",RecordOptions_Zone4F.substr(0,MaxCharSystem_Zone4),	1,"{'mt':2, 'xpos':"+Zone4F_xpoz.toString()+",'ypos':"+Zone4F_ypoz.toString()+" }");
	}
	/// When Record Display is highlighted
	if (js.GameDisplay == "Record Display"){
	PuPlayer.LabelSet(pGameInfo,"Text_Zone3F",RecordMenu_Zone3F.substr(0,MaxCharSystem_Zone3),	1,"{'mt':2, 'xpos':"+Zone3F_xpoz.toString()+",'ypos':"+Zone3F_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameInfo,"Text_Zone4F",RecordMenu_Zone4F.substr(0,MaxCharSystem_Zone4),	1,"{'mt':2, 'xpos':"+Zone4F_xpoz.toString()+",'ypos':"+Zone4F_ypoz.toString()+" }");
	}
	/// When in Passcode Menu
	if (js.mtInfo==55){
	PuPlayer.LabelSet(pGameInfo,"Text_Zone3F",Passcode_Zone3F.substr(0,MaxCharSystem_Zone3),	1,"{'mt':2, 'xpos':"+Zone3F_xpoz.toString()+",'ypos':"+Zone3F_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameInfo,"Text_Zone4F",Passcode_Zone4F.substr(0,MaxCharSystem_Zone4),	1,"{'mt':2, 'xpos':"+Zone4F_xpoz.toString()+",'ypos':"+Zone4F_ypoz.toString()+" }");
	}
	/// When "System" is highlighted
	if (js.GameDisplay == "System Menu"){
	PuPlayer.LabelSet(pGameInfo,"Text_Zone3F",SystemMenu_Zone3F.substr(0,MaxCharSystem_Zone3),	1,"{'mt':2, 'xpos':"+Zone3F_xpoz.toString()+",'ypos':"+Zone3F_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameInfo,"Text_Zone4F",SystemMenu_Zone4F.substr(0,MaxCharSystem_Zone4),	1,"{'mt':2, 'xpos':"+Zone4F_xpoz.toString()+",'ypos':"+Zone4F_ypoz.toString()+" }");
	}
	/// When "System Exit" is highlighted
	if (js.GameDisplay == "System Exit"){
	PuPlayer.LabelSet(pGameInfo,"Text_Zone3F",SystemExit_Zone3F.substr(0,MaxCharSystem_Zone3),	1,"{'mt':2, 'xpos':"+Zone3F_xpoz.toString()+",'ypos':"+Zone3F_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameInfo,"Text_Zone4F",SystemExit_Zone4F.substr(0,MaxCharSystem_Zone4),	1,"{'mt':2, 'xpos':"+Zone4F_xpoz.toString()+",'ypos':"+Zone4F_ypoz.toString()+" }");
	}
	/// When "Confirm System Exit" is highlighted
	if (js.GameDisplay == "CONFIRM System Exit"){
	PuPlayer.LabelSet(pGameInfo,"Text_Zone3F",ConfirmSystemExit_Zone3F.substr(0,MaxCharSystem_Zone3),	1,"{'mt':2, 'xpos':"+Zone3F_xpoz.toString()+",'ypos':"+Zone3F_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameInfo,"Text_Zone4F",ConfirmSystemExit_Zone4F.substr(0,MaxCharSystem_Zone4),	1,"{'mt':2, 'xpos':"+Zone4F_xpoz.toString()+",'ypos':"+Zone4F_ypoz.toString()+" }");
	}
	/// When "Restart" is highlighted
	if (js.GameDisplay == "Restart PC"){
	PuPlayer.LabelSet(pGameInfo,"Text_Zone3F",SystemRestart_Zone3F.substr(0,MaxCharSystem_Zone3),	1,"{'mt':2, 'xpos':"+Zone3F_xpoz.toString()+",'ypos':"+Zone3F_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameInfo,"Text_Zone4F",SystemRestart_Zone4F.substr(0,MaxCharSystem_Zone4),	1,"{'mt':2, 'xpos':"+Zone4F_xpoz.toString()+",'ypos':"+Zone4F_ypoz.toString()+" }");
	}
	/// When "Turn Off PC" is highlighted
	if (js.GameDisplay == "Turn Off PC"){
	PuPlayer.LabelSet(pGameInfo,"Text_Zone3F",SystemTurnOFF_Zone3F.substr(0,MaxCharSystem_Zone3),	1,"{'mt':2, 'xpos':"+Zone3F_xpoz.toString()+",'ypos':"+Zone3F_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameInfo,"Text_Zone4F",SystemTurnOFF_Zone4F.substr(0,MaxCharSystem_Zone4),	1,"{'mt':2, 'xpos':"+Zone4F_xpoz.toString()+",'ypos':"+Zone4F_ypoz.toString()+" }");
	}
	/// When "Confirm Turn Off PC" is highlighted
	if (js.GameDisplay == "CONFIRM Turn Off PC"){
	PuPlayer.LabelSet(pGameInfo,"Text_Zone3F",ConfirmTurnOFF_Zone3F.substr(0,MaxCharSystem_Zone3),	1,"{'mt':2, 'xpos':"+Zone3F_xpoz.toString()+",'ypos':"+Zone3F_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameInfo,"Text_Zone4F",ConfirmTurnOFF_Zone4F.substr(0,MaxCharSystem_Zone4),	1,"{'mt':2, 'xpos':"+Zone4F_xpoz.toString()+",'ypos':"+Zone4F_ypoz.toString()+" }");
	}
	/// When "Home List" is highlighted
	if (js.GameDisplay == "Home List"){
	PuPlayer.LabelSet(pGameInfo,"Text_Zone3F",HomeList_Zone3F.substr(0,MaxCharSystem_Zone3),	1,"{'mt':2, 'xpos':"+Zone3F_xpoz.toString()+",'ypos':"+Zone3F_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameInfo,"Text_Zone4F",HomeList_Zone4F.substr(0,MaxCharSystem_Zone4),	1,"{'mt':2, 'xpos':"+Zone4F_xpoz.toString()+",'ypos':"+Zone4F_ypoz.toString()+" }");
	}
	/// When "Game Details" is highlighted
	if (js.GameDisplay == "Game Details"){
	PuPlayer.LabelSet(pGameInfo,"Text_Zone3F",GameDet_Zone3F.substr(0,MaxCharSystem_Zone3),	1,"{'mt':2, 'xpos':"+Zone3F_xpoz.toString()+",'ypos':"+Zone3F_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameInfo,"Text_Zone4F",GameDet_Zone4F.substr(0,MaxCharSystem_Zone4),	1,"{'mt':2, 'xpos':"+Zone4F_xpoz.toString()+",'ypos':"+Zone4F_ypoz.toString()+" }");
	}
	/// When "Global Add to Favorites" is highlighted
	if (js.GameDisplay == "Global Fav Add"){
	PuPlayer.LabelSet(pGameInfo,"Text_Zone3F",GlobAddFav_Zone3F.substr(0,MaxCharSystem_Zone3),	1,"{'mt':2, 'xpos':"+Zone3F_xpoz.toString()+",'ypos':"+Zone3F_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameInfo,"Text_Zone4F",GlobAddFav_Zone4F.substr(0,MaxCharSystem_Zone4),	1,"{'mt':2, 'xpos':"+Zone4F_xpoz.toString()+",'ypos':"+Zone4F_ypoz.toString()+" }");
	}
	/// When "Add to Favorites" is highlighted
	if (js.GameDisplay == "Fav Add"){
	PuPlayer.LabelSet(pGameInfo,"Text_Zone3F",AddFav_Zone3F.substr(0,MaxCharSystem_Zone3),	1,"{'mt':2, 'xpos':"+Zone3F_xpoz.toString()+",'ypos':"+Zone3F_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameInfo,"Text_Zone4F",AddFav_Zone4F.substr(0,MaxCharSystem_Zone4),	1,"{'mt':2, 'xpos':"+Zone4F_xpoz.toString()+",'ypos':"+Zone4F_ypoz.toString()+" }");
	}
	/// When "MenuBack" is highlighted
	if (js.GameDisplay == "Go Back"){
	PuPlayer.LabelSet(pGameInfo,"Text_Zone3F",MenuBack_Zone3F.substr(0,MaxCharSystem_Zone3),	1,"{'mt':2, 'xpos':"+Zone3F_xpoz.toString()+",'ypos':"+Zone3F_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameInfo,"Text_Zone4F",MenuBack_Zone4F.substr(0,MaxCharSystem_Zone4),	1,"{'mt':2, 'xpos':"+Zone4F_xpoz.toString()+",'ypos':"+Zone4F_ypoz.toString()+" }");
	}
	/// When "Instructional Videos" is highlighted
	if (js.GameDisplay == "Instructions"){
	PuPlayer.LabelSet(pGameInfo,"Text_Zone3F",Instructions_Zone3F.substr(0,MaxCharSystem_Zone3),	1,"{'mt':2, 'xpos':"+Zone3F_xpoz.toString()+",'ypos':"+Zone3F_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameInfo,"Text_Zone4F",Instructions_Zone4F.substr(0,MaxCharSystem_Zone4),	1,"{'mt':2, 'xpos':"+Zone4F_xpoz.toString()+",'ypos':"+Zone4F_ypoz.toString()+" }");
	}
	
	/// show Popper Functions in Fallback Default Text Zone
	if (pfallback_function_Text==1) { /// Zone 1F
	PuPlayer.LabelSet(pGameInfo,"Text_Zone1F",js.GameDisplay.toString().substr(0,FontMaxChar_Zone1F),	1,"{'mt':2, 'xpos':"+Zone1F_xpoz.toString()+",'ypos':"+Zone1F_ypoz.toString()+" }");
	}
	if (pfallback_function_Text==2) { /// Zone 2F  
	PuPlayer.LabelSet(pGameInfo,"Text_Zone2F",js.GameDisplay.toString().substr(0,FontMaxChar_Zone2F),	1,"{'mt':2, 'xpos':"+Zone2F_xpoz.toString()+",'ypos':"+Zone2F_ypoz.toString()+" }");
	}
	if (pfallback_function_Text==3) { /// Zone 3F 
	PuPlayer.LabelSet(pGameInfo,"Text_Zone3F",js.GameDisplay.toString().substr(0,FontMaxChar_Zone3F),	1,"{'mt':2, 'xpos':"+Zone3F_xpoz.toString()+",'ypos':"+Zone3F_ypoz.toString()+" }");
	}
	if (pfallback_function_Text==4) { /// Zone 4F 
	PuPlayer.LabelSet(pGameInfo,"Text_Zone4F",js.GameDisplay.toString().substr(0,FontMaxChar_Zone4F),	1,"{'mt':2, 'xpos':"+Zone4F_xpoz.toString()+",'ypos':"+Zone4F_ypoz.toString()+" }");
	}
	if (pfallback_function_Text==5) { /// Zone 5F 
	PuPlayer.LabelSet(pGameInfo,"Text_Zone5F",js.GameDisplay.toString().substr(0,FontMaxChar_Zone5F),	1,"{'mt':2, 'xpos':"+Zone5F_xpoz.toString()+",'ypos':"+Zone5F_ypoz.toString()+" }");
	}
	if (pfallback_function_Text==6) { /// Zone 6F
	PuPlayer.LabelSet(pGameInfo,"Text_Zone6F",js.GameDisplay.toString().substr(0,FontMaxChar_Zone6F),	1,"{'mt':2, 'xpos':"+Zone6F_xpoz.toString()+",'ypos':"+Zone6F_ypoz.toString()+" }");
	}
	if (pfallback_function_Text==7) { /// Zone 7F
	PuPlayer.LabelSet(pGameInfo,"Text_Zone7F",js.GameDisplay.toString().substr(0,FontMaxChar_Zone7F),	1,"{'mt':2, 'xpos':"+Zone7F_xpoz.toString()+",'ypos':"+Zone7F_ypoz.toString()+" }");
	}
	if (pfallback_function_Text==8) { /// Zone 8F
	PuPlayer.LabelSet(pGameInfo,"Text_Zone8F",js.GameDisplay.toString().substr(0,FontMaxChar_Zone8F),	1,"{'mt':2, 'xpos':"+Zone8F_xpoz.toString()+",'ypos':"+Zone8F_ypoz.toString()+" }");
	}


	
	} 
	/// END of If Function Wheel Highlighted



	///  Hide Text After No Activity, if the option is enabled	
	hidetimeText=0;
	if (js.mtType!==2 && js.fadeoutTime>1) {hidetimeText=js.fadeoutTime-1;}
	PuPlayer.LabelShowPage(pGameInfo,3,hidetimeText,""); 		
	PuPlayer.SendMSG("{'mt':301, 'SN':  "+pGameInfo.toString() + " , 'FN':3, 'OT':1 }");
	}


}   
/// End of Update Labels and Text Zones

  function ShowSplash(pMSG){
	if (pSplashInfo>-1) {
	timeSec=3;
	PuPlayer.LabelShowPage(pSplashInfo,1,timeSec,"");
    	PuPlayer.LabelSet(pSplashInfo,"Splash",pMSG,0,"{'mt':1,'at':1,'fq':250,'len':" + (timeSec*1000) + ",'fc':" + 16776960 + "}");  
	}
	}

////////////////////////////////////// END of Custom TEXT Labels and Positions ///////////////////////////////////////////////////



//////////////////////////////////// DOF STUFFS ///////////////////////////////////////	

	var LastDOF = "0";
	DOFStatus = false;  //leave this always false
	DOFObject = null;
	DOFPinUP = true;    //v1.4 use new pinupdof comobj layer, set to false to use DOF direct.
	
	function DOFStart(){
	if (useDOF!=true) return;
	if (DOFStatus!=false) return; //don't do it twice
	try {
		if (DOFPinUP==false) {DOFObject = new ActiveXObject("DirectOutput.ComObject");}
		if (DOFPinUP==true)  {DOFObject = new ActiveXObject("PinUPDOF.DOFLink");}   
		DOFObject.Init("B2SServer","","pinupmenu");   //SET ROMNAME HERE....
		DOFStatus=true;
	} catch(e) {}
	}
	
	function DOFClose(){
	if (useDOF!=true) return;
	if (DOFStatus!=true) return;
	DOFStatus=false;
	try {
		DOFObject.Finish();	        
	} catch(e) {}	
		
	}
	
	function ProcessDOF(js){   //this gets called if a game has a DOF command set.  js.DOFStuff is the actuall contents.
	//App.DebugMsg('DOF NEW!!!');
	  if (useDOF && DOFStatus) {
	             try {
                 eMsg=js.DOFStuff;
				 if (eMsg=='') { rNum=Math.floor((Math.random() * 20) + 1)+900;   //20 is the random high #
				     			 eMsg="E" + rNum.toString(); 
								 //App.DebugMsg(eMsg);	
				 }				 
				 if (LastDOF != "0") {DOFObject.UpdateNamedTableElement(LastDOF,0);} 
                 DOFObject.UpdateNamedTableElement(eMsg,1);
				 LastDOF=eMsg;       
				 } catch(e) {}				 
     }	 
	}

//////////////////////////////////// DOF END ////////////////////////////////////////////////	



//////////////////////////////////// REAL DMD FUNCTIONS //////////////////////////////////////////////////

DMDStatus=false;
DMDObject=null;
DMDMirror=false;  //v14 default to mirror dmd for video playback,  set to false to use legacy anigif/png only mode.

function DMDStart(){
if (useDMD!=true) return;
if (DMDStatus==true) return;
try {
	DMDObject = new ActiveXObject("PUPDMDControl.DMD");			
	DMDObject.DMDOpen();   
    if (DMDMirror) {DMDObject.DMDStartMirror();}	
	DMDStatus=true;
} catch(e) {}	
	
}


function DMDClose(){	
if (useDMD && DMDStatus) { 
            DMDStatus=false;
	        try{
			DMDObject.DMDClose();
			DMDObject = null;
			} catch(e) {}			
}		 		 
}	


function ProcessDMD(js){                 //called when game/menu updated.
if (useDMD!=true) return;
if (DMDStatus!=true) return;
if (DMDMirror==true) return;
try {    
	    fname = js.MediaDir + '\DMD\\'+ js.GameName;		
	    DMDObject.DMDPlay(fname);     //if using DMDMirror=false only
} catch(e) {}	
}	
    

//////////////////////////////////// REAL DMD END ////////////////////////////////////////////////////////	
	


//////////////////////////////// WebStuff Remote control //////////////////////////////////////////////

WEBStatus = false;
PuPWebServer = null;


function WEBStart(){
if (useWEB!=true) return;
try {
PuPWebServer = new ActiveXObject("PUPServer.WebServer");
PuPWebServer.StartServer(80,8000);
WEBStatus=true;
} catch(e){}

}

function WEBClose(){
if (useWEB && WEBStatus) { 
   WEBStatus=false;
   try {
   PuPWebServer.StopServer();
   PuPWebServer = null;
   } catch(e) {}
   }

}

/////////////////////////////////// END WEB Remote STUFFS ////////////////////////////////////////////////

//////////////////////////////////// DOFLinx STUFF ///////////////////////////////////////	

	function ProcessDOFLinx(gtype, rom){   
	  if (useDOFLinx) {
                    try {
                         msg = 'MENU_ROM=';
                         msg = msg.concat(gtype, ',', rom);
		         var DOFLinxObject = new ActiveXObject("Scripting.FileSystemObject");
                	 DOFLinx_Pipe = DOFLinxObject.CreateTextFile("\\\\.\\pipe\\DOFLinx", false);
                         DOFLinx_Pipe.WriteLine( msg );
	                 DOFLinxPipe.Close();
	  		 DOFLinxObject.Finish();	        
			 } catch(e) {}				 
                    }
	}

	function NavigationDOFLinx(direction){
	  if (useDOFLinx) {
                    try {
			if (direction==1 || direction==2 || direction==5 || direction==6) {
                         	msg = 'MENU_NAVIGATION=';
				 if (direction==2) {msg = msg.concat('NEXT');}
				 else if (direction==1) {msg = msg.concat('PRIOR');}
				 else if (direction==5) {msg = msg.concat('NEXTPAGE');}
				 else if (direction==6) {msg = msg.concat('PRIORPAGE');}  
			         var DOFLinxObject = new ActiveXObject("Scripting.FileSystemObject");
        	        	 DOFLinx_Pipe = DOFLinxObject.CreateTextFile("\\\\.\\pipe\\DOFLinx", false);
                	         DOFLinx_Pipe.WriteLine( msg );
	                	 DOFLinxPipe.Close();
		  		 DOFLinxObject.Finish();	        
				}
			 } catch(e) {}				 
                    }

	}

//////////////////////////////////// DOF END ////////////////////////////////////////////////	
	

    function StartUp() {	//startup menusystem
	Setuplabels();	
	DOFStart();					
	DMDStart();
	WEBStart();
    }

    function PuPClose() {    //exit menusystem
	PuPlayer=null;     
    	DOFClose();
	DMDClose();
	WEBClose();
    }


    function TimerSecond() {   //default is off, but can enable in startup command.
			//PuPlayer.Hide(2);
			//App.DebugMsg('You TIMER!!!');
    }

	
	function GameUpdate(pMsg) {   //currently not used, menuupdate is used.
    //JSONstring = pMsg;	
	//var js = eval('obj = ' + JSONstring);	
	//PuPlayer.LabelSet(pGameInfo,"Test",js.GameName,1,"");	
	}
	
	function MenuUpdate(pMsg) {  	
	try {
	var js = eval('obj = ' + pMsg);	
	} catch(e) {return;}
	//set Labels
    
    UpdateLabels(js); 
	
	if (useDOF && DOFStatus) { ProcessDOF(js);}
		
	if (useDMD && DMDStatus) { ProcessDMD(js);}
	
	if (useWEB && WEBStatus) {PuPWebServer.MenuUpdate(pMsg);}

        if (useDOFLinx) {
                 ProcessDOFLinx(jsDetails.GameType.toString(),jsDetails.ROM.toString());
		}	
    }
	
    function GameLaunch(pMsg) {  	
	try {
	var js = eval('obj = ' + pMsg);	
	} catch(e) {return;}
	//App.DebugMsg('Game Launch!!!');	
	
	if (pGameInfo>-1) {PuPlayer.LabelShowPage(pGameInfo,0,0,"");}
	
    DOFClose();
	
	var kdisplay = js.GKeepDisplays.toString(); 
	if (kdisplay.indexOf("1")==-1 || kdisplay.indexOf("-1")>=0) {DMDClose();}
	
	}
	
	function MenuReturn(pMsg) {  	
	//var js = eval('obj = ' + pMsg);	
	//App.DebugMsg('Game Return!!!');
	//objShell.Run('TIMEOUT /T 2',0,true);

  	DOFStart();	
	DMDStart();
	
	if (pGameInfo>-1) {   
		PuPlayer.LabelShowPage(pGameInfo,1,0,"");
		}
		
	}
	
	
function MenuEvent(fIndex){
    //sample dof
		if (fIndex==2) {PuPlayer.PuPSound('fx_flipperup.wav',100,1,-100,100,'');}
		else if (fIndex==1) {PuPlayer.PuPSound('fx_flipperup.wav',-100,1,-100,100,'');}
		else if (fIndex==5) {PuPlayer.PuPSound('fx_bumper.wav',100,1,0,100,'');}
		else if (fIndex==6) {PuPlayer.PuPSound('fx_bumper.wav',-100,1,0,100,'');}    

		ClearText(); /// Clear all Text for a clean display on each Menu event

    if (useDOF && DOFStatus) {
	          try {
                 eNum = 799 + fIndex;
                 eMsg="E" + eNum.toString();
                 DOFObject.UpdateNamedTableElement(eMsg,1);
                 DOFObject.UpdateNamedTableElement(eMsg,0);
				 } catch(e) {}
     } 
	
	if (useWEB && WEBStatus) {PuPWebServer.MenuEvent(fIndex,'');}	 
   
        if (useDOFLinx) {
                 NavigationDOFLinx(fIndex);
		}	

    }	


function ClearText() {   /// Clear all Text for a clean display on each Menu event

	if (pGameInfo>-1) {PuPlayer.LabelShowPage(pGameInfo,0,0,"");  

	if (ShowGameDetails==1) {  //If Game Details Text is enabled
	
	/// Clear Game Details Text
	PuPlayer.LabelSet(pGameDetails,"GameDetails1","",	1,"{'mt':2, 'xpos':"+GameDetails1_xpoz.toString()+", 'ypos':"+GameDetails1_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails2","",	1,"{'mt':2, 'xpos':"+GameDetails2_xpoz.toString()+", 'ypos':"+GameDetails2_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails3","",	1,"{'mt':2, 'xpos':"+GameDetails3_xpoz.toString()+", 'ypos':"+GameDetails3_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails4","",	1,"{'mt':2, 'xpos':"+GameDetails4_xpoz.toString()+", 'ypos':"+GameDetails4_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails5","",	1,"{'mt':2, 'xpos':"+GameDetails5_xpoz.toString()+", 'ypos':"+GameDetails5_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails6","",	1,"{'mt':2, 'xpos':"+GameDetails6_xpoz.toString()+", 'ypos':"+GameDetails6_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails7","",	1,"{'mt':2, 'xpos':"+GameDetails7_xpoz.toString()+", 'ypos':"+GameDetails7_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails8","",	1,"{'mt':2, 'xpos':"+GameDetails8_xpoz.toString()+", 'ypos':"+GameDetails8_ypoz.toString()+" }");	
	PuPlayer.LabelSet(pGameDetails,"GameDetails9","",	1,"{'mt':2, 'xpos':"+GameDetails9_xpoz.toString()+", 'ypos':"+GameDetails9_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails10","",	1,"{'mt':2, 'xpos':"+GameDetails10_xpoz.toString()+", 'ypos':"+GameDetails10_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails11","",	1,"{'mt':2, 'xpos':"+GameDetails11_xpoz.toString()+", 'ypos':"+GameDetails11_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails12","",	1,"{'mt':2, 'xpos':"+GameDetails12_xpoz.toString()+", 'ypos':"+GameDetails12_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails13","",	1,"{'mt':2, 'xpos':"+GameDetails13_xpoz.toString()+", 'ypos':"+GameDetails13_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails14","",	1,"{'mt':2, 'xpos':"+GameDetails14_xpoz.toString()+", 'ypos':"+GameDetails14_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails15","",	1,"{'mt':2, 'xpos':"+GameDetails15_xpoz.toString()+", 'ypos':"+GameDetails15_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails16","",	1,"{'mt':2, 'xpos':"+GameDetails16_xpoz.toString()+", 'ypos':"+GameDetails16_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails17","",	1,"{'mt':2, 'xpos':"+GameDetails17_xpoz.toString()+", 'ypos':"+GameDetails17_ypoz.toString()+" }");	
	PuPlayer.LabelSet(pGameDetails,"GameDetails18","",	1,"{'mt':2, 'xpos':"+GameDetails18_xpoz.toString()+", 'ypos':"+GameDetails18_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails19","",	1,"{'mt':2, 'xpos':"+GameDetails19_xpoz.toString()+", 'ypos':"+GameDetails19_ypoz.toString()+" }");
	PuPlayer.LabelSet(pGameDetails,"GameDetails20","",	1,"{'mt':2, 'xpos':"+GameDetails20_xpoz.toString()+", 'ypos':"+GameDetails20_ypoz.toString()+" }");	
	}
	}
	}


// These are the usable Popper Database Fields

//	Game Screen Name:       js.GameDisplay
//	Manufacturer:           jsDetails.Manufact
//	Date / Year:            jsDetails.GameYear
//	PlayList:               js.PlayListName
//	# of Games:             js.listcount
//	Emulator:               js.EmuDisplay
//	File / Game Version:    jsDetails.GAMEVER
//	Number of Players:      jsDetails.NumPlayers
//	Game Type:              jsDetails.GameType
//	Author:                 jsDetails.Author
//	Game Theme:             jsDetails.GameTheme
//	Rating:                 jsDetails.GameRating
//	IPDB #:                 jsDetails.IPDBNum
//	Category:               jsDetails.Category
//	Tags:			jsDetails.TAGS
//	Game Name:              jsDetails.GameName
//	Game FileName:          jsDetails.GameFileName
//	Rom:			jsDetails.ROM



function DisplayRefresh(){
if (hidetimeText>0 && pGameInfo>-1) {PuPlayer.SendMSG("{'mt':301, 'SN':  "+pGameInfo.toString() + " , 'FN':3, 'OT':1 }");}
}	
	
function GetPuPVersion(){
    App.SetPuPVersion(2);    
}	

function PlayListUpdate(pMsg){
	
} 


//// Load PuPMenuScript USER files. This must be last in this script!

function includeFile (filename) {
        var fso = new ActiveXObject ("Scripting.FileSystemObject");
        var fileStream = fso.openTextFile (filename);
        var fileData = fileStream.readAll();
        fileStream.Close();
        eval(fileData);
    }        
        
includeFile("PUPMenuScriptSysOptions.txt");  

includeFile("PuPMenuScriptSysLanguage.txt");  

includeFile("PUPMenuScriptThemeOptions.txt");  

